{"version":3,"sources":["jcc2d.js","modules/util.js","modules/event.js","modules/loader.js","modules/animation.js","modules/jcc2d.js","modules/RAF.js","modules/tween.js"],"names":["root","factory","exports","module","define","amd","JC","this","_rt","val","Object","prototype","toString","call","InteractionData","global","x","y","target","originalEvent","cancleBubble","ratio","type","Eventer","touchstarted","mouseDowned","listeners","Texture","img","texture","width","height","loaded","dispose","This","on","Loader","textures","_total","_failed","_received","Animate","opts","element","duration","living","onCompelete","onUpdate","infinity","alternate","ease","repeats","delay","delayCut","progress","direction","timeScale","paused","Transition","ATRS","from","ATRE","to","Animation","_keyframes","keys","_keyIndex","_direction","_keyConfig","keyConfig","configKey","PathMotion","points","attachNormal","_cacheRotate","rotation","radian","DTR","_cacheVector","Math","cos","sin","Animator","animates","MovieClip","animations","index","frames","sy","sx","fillMode","fps","pt","nt","Matrix","a","b","c","d","tx","ty","DisplayObject","_ready","visible","worldAlpha","alpha","scaleX","scaleY","skewX","skewY","rotationCache","_sr","_cr","pivotX","pivotY","mask","parent","worldTransform","event","passEvent","bound","Container","cds","Sprite","upTexture","Graphics","cacheCanvas","Text","text","font","color","textAlign","textBaseline","outline","lineWidth","US","UF","Stage","id","bgColor","canvas","document","getElementById","ctx","getContext","style","backgroundColor","autoClear","setStyle","imageSmoothingEnabled","webkitImageSmoothingEnabled","mozImageSmoothingEnabled","oImageSmoothingEnabled","initEvent","window","lastTime","vendors","length","requestAnimationFrame","cancelAnimationFrame","callback","currTime","Date","getTime","timeToCall","max","setTimeout","clearTimeout","RAF","requestAnimFrame","CAF","copyJSON","json","JSON","parse","stringify","PI","RTD","isArray","ks","object","isObject","isString","isNumber","isFunction","random","min","euclideanModulo","n","m","clamp","TWEEN","easeBoth","t","extend","key","fn","push","off","ears","cbs","i","splice","emit","ev","undefined","create","Image","crossOrigin","src","onload","onerror","load","srcMap","bind","getById","defineProperty","get","loaderUtil","_swapEase","indexOf","replace","nextPose","cache","pause","start","stop","cancle","constructor","update","snippet","abs","pose","config","setVal","_rotate","pos","getPoint","decomposeRotate","preDegree","len","rT","l","slice","r","oP","oL","oR","p1","p2","vector","nor","pi","sqrt","isNaN","acos","fromTo","clear","_addMove","motion","keyFrames","animate","interval","next","getFramePos","cf","row","_textureW","lintRow","lintCol","mCol","mRow","playMovie","movie","format","console","warn","arr","end","fromArray","array","toArray","transpose","Float32Array","apply","newPos","applyInverse","translate","scale","rotate","angle","a1","c1","tx1","append","matrix","b1","d1","identity","setTransform","sr","cr","cy","nsx","cx","IDENTITY","TEMP_MATRIX","set","isVisible","removeMask","vals","updateMe","wt","upAnimation","globalAlpha","getGlobalPos","once","cb","getBound","p","setBound","needless","regX","regY","ContainsPoint","px","py","ax","ay","bx","by","lup","depth","lx","addChilds","cd","arguments","removeChilds","updateTransform","updateChilds","render","save","renderMe","renderChilds","restore","noticeEvent","child","upEvent","hitTest","re","hitTestMe","_textureH","drawImage","draw","cached","createElement","session","_ctx","clearRect","center","_drawBack","drawCall","fillStyle","fillText","strokeStyle","strokeText","resize","w","h","sw","sh","now","addEventListener","eventProxy","preventDefault","evd","fixCoord","offset","getPos","offsetWidth","touches","pageX","pageY","obj","offsetParent","offsetLeft","offsetTop"],"mappings":"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","file":"../src/jcc2d.js","sourcesContent":["(function (root, factory) {\n  if (typeof exports === 'object') {\n    // CommonJS\n    module.exports = factory();\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD\n    define(function () {\n      return (root.JC = factory());\n    });\n  } else {\n    // Global Variables\n    root.JC = factory();\n  }\n}(this, function () {\n\n\tvar JC = window.JC||{};\n\n\t(function() {\n\t    var lastTime = 0;\n\t    var vendors = ['ms', 'moz', 'webkit', 'o'];\n\t    for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n\t        window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\n\t        window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] ||\n\t            window[vendors[x] + 'CancelRequestAnimationFrame'];\n\t    }\n\t\n\t    if (!window.requestAnimationFrame) {\n\t        window.requestAnimationFrame = function(callback) {\n\t            var currTime = new Date().getTime();\n\t            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n\t            var id = window.setTimeout(function() { callback(currTime + timeToCall); },\n\t              timeToCall);\n\t            lastTime = currTime + timeToCall;\n\t            return id;\n\t        };\n\t    }\n\t\n\t    if (!window.cancelAnimationFrame) {\n\t        window.cancelAnimationFrame = function(id) {\n\t            clearTimeout(id);\n\t        };\n\t    }\n\t\n\t    window.RAF = window.requestAnimFrame = window.requestAnimationFrame;\n\t    window.CAF = window.cancelAnimationFrame;\n\t})();\n\n  \n  /**\n   * 简单拷贝json对象\n   *\n   * @name copyJSON\n   * @memberof JC\n   * @property {JC.copyJSON}\n   */\n   \n  JC.copyJSON = function(json){\n      return JSON.parse(JSON.stringify(json));\n  };\n  \n  /**\n   * 将角度转化成弧度\n   *\n   * @name DTR\n   * @memberof JC\n   * @property {JC.DTR}\n   */\n  \n  JC.DTR = Math.PI/180;\n  \n  /**\n   * 将弧度转化成角度\n   *\n   * @name RTD\n   * @memberof JC\n   * @property {JC.RTD}\n   */\n  \n  JC.RTD = 180/Math.PI;\n  \n  function _rt(val){\n      return Object.prototype.toString.call(val);\n  }\n  \n  /**\n   * 是否为数组\n   *\n   * @name isArray\n   * @memberof JC\n   * @property {JC.isArray}\n   */\n  JC.isArray = (function(){\n      var ks = _rt([]);\n      return function(object){\n          return Object.prototype.toString.call(object) === ks;\n      };\n  })();\n  \n  /**\n   * 是否为对象\n   *\n   * @name isObject\n   * @memberof JC\n   * @property {JC.isObject}\n   */\n  JC.isObject = (function(){\n      var ks = _rt({});\n      return function(object){\n          return Object.prototype.toString.call(object) === ks;\n      };\n  })();\n  \n  /**\n   * 是否为字符串\n   *\n   * @name isObject\n   * @memberof JC\n   * @property {JC.isObject}\n   */\n  JC.isString = (function(){\n      var ks = _rt('s');\n      return function(object){\n          return Object.prototype.toString.call(object) === ks;\n      };\n  })();\n  \n  /**\n   * 是否为数字\n   *\n   * @name isNumber\n   * @memberof JC\n   * @property {JC.isNumber}\n   */\n  JC.isNumber = (function(){\n      var ks = _rt(1);\n      return function(object){\n          return Object.prototype.toString.call(object) === ks;\n      };\n  })();\n  \n  /**\n   * 是否为函数\n   *\n   * @name isFunction\n   * @memberof JC\n   * @property {JC.isFunction}\n   */\n  JC.isFunction = (function(){\n      var ks = _rt(function(){});\n      return function(object){\n          return Object.prototype.toString.call(object) === ks;\n      };\n  })();\n  \n  /**\n   * 强化的随机数\n   *\n   * @name random\n   * @memberof JC\n   * @property {JC.random}\n   */\n  \n  JC.random = function(min, max){\n      if (JC.isArray(min))\n          return min[~~(Math.random() * min.length)];\n      if (!JC.isNumber(max))\n          max = min || 1, min = 0;\n      return min + Math.random() * (max - min);\n  };\n  \n  \n  /**\n   * 阿基米德求模\n   *\n   * @name euclideanModulo\n   * @memberof JC\n   * @property {JC.euclideanModulo}\n   */\n  \n  JC.euclideanModulo = function(n, m){\n      return ((n % m) + m) % m;\n  };\n  \n  \n  JC.clamp = function(x, a, b) {\n      return (x < a) ? a : ((x > b) ? b : x);\n  }\n  \n  \n\n\tJC.TWEEN = {\n\t\teaseBoth: function(t, b, c, d){  //加速减速曲线\n\t\t\tif ((t/=d/2) < 1) {\n\t\t\t\treturn c/2*t*t + b;\n\t\t\t}\n\t\t\treturn -c/2 * ((--t)*(t-2) - 1) + b;\n\t\t},\n\t\textend: function(opts){\n\t\t\tif(!opts)return;\n\t\t\tfor(var key in opts){\n\t\t\t\tif(key!=='extend'&&opts[key])this[key]=opts[key];\n\t\t\t}\n\t\t}\n\t};\n\n  \n  /**\n   * jcc2d的事件消息对象的类\n   *\n   * @class JC.InteractionData\n   * @constructor\n   */\n  function InteractionData(){\n      /**\n       * 转换到canvas坐标系统的事件触发点\n       *\n       * @property global\n       * @type Object\n       */\n      this.global = {x:-100000,y:-100000};\n  \n      /**\n       * 事件源\n       *\n       * @property target\n       * @type JC.Container\n       */\n      this.target = null;\n  \n      /**\n       * 浏览器的原始事件对象\n       *\n       * @property originalEvent\n       * @type Event\n       */\n      this.originalEvent = null;\n  \n      /**\n       * 在canvas内阻止事件冒泡\n       *\n       * @property cancleBubble\n       * @type Boolean\n       */\n      this.cancleBubble = false;\n  \n      /**\n       * canvas视窗和页面坐标的兑换比例\n       *\n       * @property ratio\n       * @type Number\n       */\n      this.ratio = 1;\n  \n      /**\n       * 事件类型\n       *\n       * @property type\n       * @type String\n       */\n      this.type = '';\n  }\n  JC.InteractionData = InteractionData;\n  \n  \n  \n  /**\n   * jcc2d的事件对象的类\n   *\n   * @class JC.Eventer\n   * @constructor Eventer\n   * @memberof JC\n   */\n  function Eventer(){\n      this.touchstarted = false;\n      this.mouseDowned = false;\n      this.listeners = {};\n  }\n  /**\n   * 事件对象的事件绑定函数\n   *\n   * @param type {String} 事件类型\n   * @param fn {Function} 回调函数\n   * @private\n   */\n  Eventer.prototype.on = function(type,fn){\n      this.listeners[type] = this.listeners[type]||[];\n      this.listeners[type].push(fn);\n  };\n  /**\n   * 事件对象的事件解绑函数\n   *\n   * @param type {String} 事件类型\n   * @param fn {Function} 注册时回调函数的引用\n   * @private\n   */\n  Eventer.prototype.off = function(type,fn){\n      var ears = this.listeners;\n      var cbs = ears[ type ];\n      var i = ears[type].length;\n      if (cbs&&i>0) {\n          if(fn){\n              while (i--) {\n                  if (cbs[i] === fn) {\n                      cbs.splice(i, 1);\n                  }\n              }\n          }else{\n              cbs.length = 0;\n          }\n      }\n  };\n  /**\n   * 事件对象的触发事件函数\n   *\n   * @param ev {JC.InteractionData} 事件类型\n   * @private\n   */\n  Eventer.prototype.emit = function(ev){\n      if ( this.listeners === undefined ) return;\n      var ears = this.listeners;\n      var cbs = ears[ ev.type ];\n      if ( cbs !== undefined ) {\n          var length = cbs.length;\n          var i;\n          for ( i = 0; i < length; i ++ ) {\n              cbs[ i ].call( this, ev );\n          }\n      }\n  };\n  JC.Eventer = Eventer;\n\n\t\n\t/**\n\t * 图片纹理类\n\t *\n\t * @class\n\t * @extends JC.Eventer\n\t * @memberof JC\n\t */\n\tfunction Texture(img){\n\t\tJC.Eventer.call( this );\n\t\tthis.texture = null;\n\t\tthis.width = 0;\n\t\tthis.height = 0;\n\t\tthis.loaded = false;\n\t\n\t\tthis.dispose(img);\n\t\n\t\tvar This = this;\n\t\tthis.on('load',function(){\n\t\t\tThis.width = This.texture.width;\n\t\t\tThis.height = This.texture.height;\n\t\t});\n\t}\n\tJC.Texture = Texture;\n\tTexture.prototype = Object.create( JC.Eventer.prototype );\n\tTexture.prototype.dispose = function(img){\n\t\tvar This = this;\n\t    if(typeof img === 'string'){\n\t    \tthis.texture = new Image();\n\t    \tthis.texture.crossOrigin = '';\n\t    \tthis.texture.src = img;\n\t    \tthis.texture.onload = function(){\n\t    \t\tThis.loaded = true;\n\t    \t\tThis.emit({type: 'load'});\n\t    \t};\n\t    \tthis.texture.onerror = function(){\n\t    \t\tThis.emit({type: 'error'});\n\t    \t};\n\t    }\n\t    if(img instanceof Image && img.width*img.height>0){\n\t    \tthis.texture = img;\n\t\t\tthis.width = img.width;\n\t\t\tthis.height = img.height;\n\t    }\n\t};\n\t\n\t\n\t\n\t\n\t/**\n\t * 图片资源加载器\n\t *\n\t * @class\n\t * @extends JC.Eventer\n\t * @memberof JC\n\t */\n\tfunction Loader(){\n\t\tJC.Eventer.call( this );\n\t\tthis.textures = {};\n\t\tthis._total = 0;\n\t\tthis._failed = 0;\n\t\tthis._received = 0;\n\t}\n\tJC.Loader = Loader;\n\tLoader.prototype = Object.create( JC.Eventer.prototype );\n\t\n\t/**\n\t * 开始加载资源\n\t * \n\t * ```js\n\t * var loadBox = new JC.Loader();\n\t * loadBox.load({\n\t * \t\tid: 'img/xxx.png'\n\t * });\n\t * ```\n\t *\n\t * @param srcMap {object}\n\t * @return {JC.Loader}\n\t */\n\tLoader.prototype.load = function (srcMap){\n\t\tvar This = this;\n\t\tthis._total = 0;\n\t\tthis._failed = 0;\n\t\tthis._received = 0;\n\t\tfor (var src in srcMap) {\n\t\t\tthis._total++;\n\t\t\tthis.textures[src] = new Texture(srcMap[src]);\n\t\t\tbind(this.textures[src]);\n\t\t}\n\t\n\t\tfunction bind(texture){\n\t\t\ttexture.on('load',function(){\n\t\t\t\tThis._received++;\n\t\t\t\tThis.emit({type: 'update'});\n\t\t\t\tif(This._received+This._failed>=This._total)This.emit({type: 'compelete'});\n\t\t\t});\n\t\t\ttexture.on('error',function(){\n\t\t\t\tThis._failed++;\n\t\t\t\tThis.emit({type: 'update'});\n\t\t\t\tif(This._received+This._failed>=This._total)This.emit({type: 'compelete'});\n\t\t\t});\n\t\t}\n\t\treturn this;\n\t};\n\t\n\t/**\n\t * 从纹理图片盒子里面通过id获取纹理图片\n\t * \n\t * ```js\n\t * var texture = loadBox.getById('id');\n\t * ```\n\t *\n\t * @param id {string}\n\t * @return {JC.Texture}\n\t */\n\tLoader.prototype.getById = function (id){\n\t\treturn this.textures[id];\n\t};\n\tObject.defineProperty(Texture.prototype, 'progress', {\n\t    get: function() {\n\t        return this._total===0?1:(this._received+this._failed)/this._total;\n\t    }\n\t});\n\t\n\t\n\t\n\t/**\n\t * 资源加载工具\n\t *\n\t * @function\n\t * @memberof JC\n\t * @param srcMap {object} key-src map\n\t * @return {JC.Loader}\n\t */\n\tJC.loaderUtil = function(srcMap){\n\t\treturn new JC.Loader().load(srcMap);\n\t};\n\t\n\n  /**\n   * 动画对象的基本类型\n   *\n   * @class\n   * @memberof JC\n   * @param [opts] {object} 动画配置信息\n   */\n  \n  function Animate(opts) {\n      this.element = opts.element || {};\n      this.duration = opts.duration || 300;\n      this.living = true;\n  \n      this.onCompelete = opts.onCompelete || null;\n      this.onUpdate = opts.onUpdate || null;\n  \n      this.infinity = opts.infinity || false;\n      this.alternate = opts.alternate || false;\n      this.ease = opts.ease || 'easeBoth';\n      this.repeats = opts.repeats || 0;\n      this.delay = opts.delay || 0;\n      this.delayCut = this.delay;\n      this.progress = 0;\n      this.direction = 1;\n  \n      this.timeScale = opts.timeScale || 1;\n  \n      this.paused = false;\n  }\n  JC.Animate = Animate;\n  Animate.prototype._swapEase = function() {\n      var ease = this.ease;\n      if (ease.indexOf('In') > 0) {\n          ease = ease.replace('In', 'Out');\n      } else if (ease.indexOf('Out') > 0) {\n          ease = ease.replace('Out', 'In');\n      }\n      this.ease = ease;\n  };\n  Animate.prototype.nextPose = function() {\n      var cache = {};\n      for (var i in this.ATRE) {\n          cache[i] = JC.TWEEN[this.ease](this.progress, this.ATRS[i], this.ATRE[i] - this.ATRS[i], this.duration);\n          if (this.element[i] !== undefined) this.element[i] = cache[i];\n      }\n      return cache; //this.onUpdate\n  };\n  Animate.prototype.pause = function() {\n      this.paused = true;\n  };\n  Animate.prototype.start = function() {\n      this.paused = false;\n  };\n  Animate.prototype.stop = function() {\n      this.progress = this.duration;\n  };\n  Animate.prototype.cancle = function() {\n      this.living = false;\n  };\n  \n  \n  /**\n   * Transition类型动画对象\n   *\n   * @class\n   * @memberof JC\n   * @param [opts] {object} 动画所具备的特性\n   */\n  \n  function Transition(opts) {\n      JC.Animate.call(this, opts);\n  \n      this.ATRS = opts.from;\n      this.ATRE = opts.to;\n  \n  }\n  JC.Transition = Transition;\n  Transition.prototype = Object.create(JC.Animate.prototype);\n  Transition.prototype.constructor = JC.Transition;\n  Transition.prototype.update = function(snippet) {\n      if (this.paused || !this.living || this.delayCut>0){\n          if (this.delayCut>0) this.delayCut -= Math.abs(snippet);\n          return;\n      }\n  \n      var progress = this.progress += this.direction * this.timeScale * snippet;\n      this.progress = JC.clamp(progress,0,this.duration);\n  \n      var pose = this.nextPose();\n      \n      if (this.onUpdate) this.onUpdate(pose, this.progress / this.duration);\n  \n      if ((this.direction === -1 && progress <= 0) || (this.direction === 1 && progress >= this.duration)) {\n          if (this.repeats > 0 || this.infinity) {\n              if (this.repeats > 0) --this.repeats;\n              this.delayCut = this.delay;\n              if (this.alternate) {\n                  this.direction *= -1;\n                  this._swapEase();\n              } else {\n                  this.progress = 0;\n              }\n          } else {\n              this.living = false;\n              if(this.onCompelete) this.onCompelete(pose);\n          }\n      }\n  };\n  \n  \n  /**\n   * Animation类型动画对象\n   *\n   * @class\n   * @memberof JC\n   * @param [opts] {object} 动画配置信息\n   */\n  function Animation(opts) {\n      JC.Animate.call(this, opts);\n  \n      this._keyframes = opts.keys;\n      this._keyIndex = 0;\n      this._direction = 1;\n      this._keyConfig = opts.keyConfig;\n  \n      this.configKey();\n  }\n  JC.Animation = Animation;\n  Animation.prototype = Object.create(JC.Animate.prototype);\n  Animation.prototype.constructor = JC.Animation;\n  Animation.prototype.configKey = function() {\n      this.ATRS = this._keyframes[this._keyIndex];\n      this._keyIndex += this._direction;\n      this.ATRE = this._keyframes[this._keyIndex];\n      var config = this._keyConfig[Math.min(this._keyIndex, this._keyIndex - this._direction)] || {};\n      this.ease = config.ease || this.ease;\n      this.duration = config.duration || this.duration;\n      this.progress = 0;\n  };\n  Animation.prototype.update = function(snippet) {\n      if (this.paused || !this.living) return;\n      this.progress += this.timeScale * snippet;\n  \n      if (this.progress < this.duration) {\n          if (this.progress < 0) return;\n          var pose = this.nextPose();\n          if (this.onUpdate) this.onUpdate(pose, this.progress / this.duration, this._keyIndex);\n      } else {\n          this.element.setVal(this.ATRE);\n          if (this.onUpdate) this.onUpdate(this.ATRE, 1, this._keyIndex);\n          if (this._keyIndex < this._keyframes.length - 1 && this._keyIndex > 0) {\n              this.configKey();\n          } else {\n              if (this.repeats > 0 || this.infinity) {\n                  if (this.repeats > 0) --this.repeats;\n                  if (this.alternate) {\n                      this._direction *= -1;\n                  } else {\n                      this._keyIndex = 0;\n                  }\n                  this.configKey();\n              } else {\n                  this.living = false;\n                  if (this.onCompelete) this.onCompelete();\n              }\n          }\n      }\n  };\n  \n  \n  /**\n   * PathMotion类型动画对象\n   *\n   * @class\n   * @memberof JC\n   * @param [opts] {object} 动画所具备的特性\n   */\n  \n  function PathMotion(opts) {\n      JC.Animate.call(this, opts);\n  \n      this.points = opts.points;\n      this.attachNormal = opts.attachNormal || false;\n      this._cacheRotate = this.element.rotation;\n      var radian = this._cacheRotate * JC.DTR;\n      this._cacheVector = { x: 10 * Math.cos(radian), y: 10 * Math.sin(radian) };\n  }\n  JC.PathMotion = PathMotion;\n  PathMotion.prototype = Object.create(JC.Animate.prototype);\n  PathMotion.prototype.constructor = JC.PathMotion;\n  PathMotion.prototype.update = function(snippet) {\n      if (this.paused || !this.living || this.delayCut>0){\n          if (this.delayCut>0) this.delayCut -= Math.abs(snippet);\n          return;\n      }\n  \n      this.progress += this.direction * this.timeScale * snippet;\n  \n      var pose = this.nextPose();\n      if (this.onUpdate) this.onUpdate(pose, this.progress / this.duration);\n  \n      if ((this.direction === -1 && this.progress <= 0) || (this.direction === 1 && this.progress >= this.duration)) {\n          if (this.repeats > 0 || this.infinity) {\n              if (this.repeats > 0) --this.repeats;\n              this.delayCut = this.delay;\n              if (this.alternate) {\n                  this.direction *= -1;\n                  this._swapEase();\n              } else {\n                  this.progress = 0;\n              }\n          } else {\n              this.living = false;\n              if (this.onCompelete) this.onCompelete();\n          }\n      }\n  };\n  PathMotion.prototype.nextPose = function() {\n      var cache = {},\n          _rotate = 0,\n          t = JC.TWEEN[this.ease](this.progress, 0, 1, this.duration),\n          pos = this.getPoint(t, this.points);\n  \n      cache.x = pos.x;\n      cache.y = pos.y;\n      if (this.attachNormal) {\n          _rotate = this.decomposeRotate(t, pos);\n          cache.rotation = _rotate === false ? this.preDegree : _rotate;\n          cache.rotation += this._cacheRotate;\n          if (_rotate !== false) this.preDegree = _rotate;\n      }\n      this.element.setVal(cache);\n      return cache;\n  };\n  PathMotion.prototype.getPoint = function(t, points) {\n      var a = points,\n          len = a.length,\n          rT = 1 - t,\n          l = a.slice(0, len - 1),\n          r = a.slice(1),\n          oP = {};\n      if (len > 3) {\n          var oL = this.getPoint(t, l),\n              oR = this.getPoint(t, r);\n          oP.x = rT * oL.x + t * oR.x;\n          oP.y = rT * oL.y + t * oR.y;\n          return oP;\n      } else {\n          oP.x = rT * rT * points[0].x + 2 * t * rT * points[1].x + t * t * points[2].x;\n          oP.y = rT * rT * points[0].y + 2 * t * rT * points[1].y + t * t * points[2].y;\n          return oP;\n      }\n  };\n  PathMotion.prototype.decomposeRotate = function(t, pos) {\n      var p1 = pos || this.getPoint(t, this.points);\n      var p2 = this.getPoint(t + 0.01, this.points);\n      var vector = { x: p2.x - p1.x, y: p2.y - p1.y };\n  \n      var nor = this._cacheVector.x * vector.y - vector.x * this._cacheVector.y;\n      var pi = nor > 0 ? 1 : -1;\n      var cos = (vector.x * this._cacheVector.x + vector.y * this._cacheVector.y) / (Math.sqrt(vector.x * vector.x + vector.y * vector.y) * Math.sqrt(this._cacheVector.x * this._cacheVector.x + this._cacheVector.y * this._cacheVector.y));\n      if (isNaN(cos)) return false;\n      return pi * Math.acos(cos) * JC.RTD;\n  };\n  \n  \n  \n  \n  \n  /**\n   * Animator类型动画对象\n   *\n   * @class\n   * @memberof JC\n   */\n  function Animator(element) {\n      this.element = element;\n      // this.start = false;\n      this.animates = [];\n  }\n  JC.Animator = Animator;\n  Animator.prototype.update = function(snippet) {\n      for (var i = 0; i < this.animates.length; i++) {\n          if (!this.animates[i].living) this.animates.splice(i, 1);\n          if (this.animates[i]) this.animates[i].update(snippet);\n      }\n  };\n  Animator.prototype.fromTo = function(opts, clear) {\n      this.element.setVal(opts.from);\n      opts.element = this.element;\n      return this._addMove(new JC.Transition(opts), clear);\n  };\n  Animator.prototype.to = function(opts, clear) {\n      opts.from = {};\n      for (var i in opts.to) {\n          opts.from[i] = this.element[i];\n      }\n      opts.element = this.element;\n      return this._addMove(new JC.Transition(opts), clear);\n  };\n  Animator.prototype.motion = function(opts, clear) {\n      opts.element = this.element;\n      return this._addMove(new JC.PathMotion(opts), clear);\n  };\n  Animator.prototype.keyFrames = function(opts, clear) {\n      opts.element = this.element;\n      return this._addMove(new JC.Animation(opts), clear);\n  };\n  Animator.prototype._addMove = function(animate, clear) {\n      if (clear) this.clear();\n      this.animates.push(animate);\n      return animate;\n  };\n  Animator.prototype.clear = function() {\n      this.animates.length = 0;\n  };\n  \n  \n  \n  \n  \n  /**\n   * MovieClip类型动画对象\n   *\n   * @class\n   * @memberof JC\n   * @param [element] {object} 动画对象 内部传入\n   * @param [opts] {object} 动画配置信息 内部传入\n   */\n  function MovieClip(element, opts) {\n      this.element = element;\n      this.living = false;\n  \n      this.onCompelete = null;\n      // this.onUpdate = null;\n  \n      this.infinity = false;\n      this.alternate = false;\n      this.repeats = 0;\n  \n      this.animations = opts.animations || {};\n  \n      this.index = 0;\n      this.direction = 1;\n      this.frames = [];\n      this.sy = opts.sy || 0;\n      this.sx = opts.sx || 0;\n      this.fillMode = 0;\n      this.fps = 16;\n  \n      this.paused = false;\n  \n      this.pt = 0;\n      this.nt = 0;\n  }\n  JC.MovieClip = MovieClip;\n  MovieClip.prototype.update = function(snippet) {\n      if (this.paused || !this.living) return;\n      this.nt += snippet;\n      if (this.nt - this.pt < this.interval) return;\n      this.pt = this.nt;\n      var i = this.index + this.direction;\n      if (i < this.frames.length && i >= 0) {\n          this.index = i;\n          // Do you need this handler???\n          // this.onUpdate&&this.onUpdate(this.index);\n      } else {\n          if (this.repeats > 0 || this.infinity) {\n              if (this.repeats > 0) --this.repeats;\n              if (this.alternate) {\n                  this.direction *= -1;\n                  this.index += this.direction;\n              } else {\n                  this.direction = 1;\n                  this.index = 0;\n              }\n              // Do you need this handler???\n              // this.onUpdate&&this.onUpdate(this.index);\n          } else {\n              this.living = false;\n              this.index = this.fillMode;\n              if (this.onCompelete) this.onCompelete();\n              if (this.next) this.next();\n          }\n      }\n  };\n  MovieClip.prototype.getFramePos = function() {\n      var pos = {\n          x: this.sx,\n          y: this.sy\n      };\n      var cf = this.frames[this.index];\n      if (cf > 0) {\n          var row = this.element._textureW / this.element.width >> 0;\n          var lintRow = this.sx / this.element.width >> 0;\n          var lintCol = this.sy / this.element.height >> 0;\n          var mCol = lintCol + (lintRow + cf) / row >> 0;\n          var mRow = (lintRow + cf) % row;\n          pos.x = mRow * this.element.width;\n          pos.y = mCol * this.element.height;\n      }\n      return pos;\n  };\n  MovieClip.prototype.playMovie = function(opts) {\n      this.next = null;\n      var movie = this.format(opts.movie);\n      if (!JC.isArray(movie)) return;\n      this.frames = movie;\n      this.index = 0;\n      this.direction = 1;\n      this.fillMode = opts.fillMode || 0;\n      this.fps = opts.fps || this.fps;\n      this.infinity = opts.infinity || false;\n      this.alternate = opts.alternate || false;\n      this.repeats = opts.repeats || 0;\n      this.living = true;\n      this.onCompelete = opts.onCompelete || null;\n  };\n  MovieClip.prototype.format = function(movie) {\n      if (JC.isString(movie)) {\n          var config = this.animations[movie];\n          if (config) {\n              return this.format(config);\n          } else {\n              console.warn(\n                  '%c JC.MovieClip warn %c: you didn\\`t config %c' + movie + '%c in animations ',\n                  'color: #f98165; background: #80a89e',\n                  'color: #80a89e; background: #cad9d5;',\n                  'color: #f98165; background: #cad9d5',\n                  'color: #80a89e; background: #cad9d5'\n              );\n              return false;\n          }\n      } else if (JC.isArray(movie)) {\n          return movie;\n      } else if (JC.isObject(movie)) {\n          var arr = [];\n          for (var i = movie.start; i <= movie.end; i++) {\n              arr.push(i);\n          }\n          if (movie.next && this.animations[movie.next]) {\n              var This = this;\n              this.next = function() {\n                  This.playMovie({\n                      movie: this.animations[movie.next],\n                      infinity: true\n                  });\n              };\n          }\n          return arr;\n      }\n  };\n  MovieClip.prototype.pause = function() {\n      this.paused = true;\n  };\n  MovieClip.prototype.start = function() {\n      this.paused = false;\n  };\n  MovieClip.prototype.cancle = function() {\n      this.living = false;\n  };\n  Object.defineProperty(MovieClip.prototype, 'interval', {\n      get: function() {\n          return this.fps > 0 ? 1000 / this.fps >> 0 : 16;\n      }\n  });\n  \n\n\t\n\t/**\n\t * 矩阵对象，用来描述和记录对象的tansform 状态信息\n\t *\n\t * @class\n\t * @memberof JC\n\t */\n\tfunction Matrix(){\n\t    this.a = 1;\n\t    this.b = 0;\n\t    this.c = 0;\n\t    this.d = 1;\n\t    this.tx = 0;\n\t    this.ty = 0;\n\t}\n\tJC.Matrix = Matrix;\n\t\n\t/**\n\t * 从数组设置一个矩阵\n\t *\n\t * @param array {number[]}\n\t */\n\tMatrix.prototype.fromArray = function(array){\n\t    this.a = array[0];\n\t    this.b = array[1];\n\t    this.c = array[3];\n\t    this.d = array[4];\n\t    this.tx = array[2];\n\t    this.ty = array[5];\n\t};\n\t\n\t/**\n\t * 将对象的数据以数组的形式导出\n\t *\n\t * @param transpose {boolean} 是否对矩阵进行转置\n\t * @return {number[]} 返回数组\n\t */\n\tMatrix.prototype.toArray = function(transpose){\n\t    if(!this.array) this.array = new JC.Float32Array(9);\n\t    var array = this.array;\n\t\n\t    if(transpose){\n\t        array[0] = this.a;\n\t        array[1] = this.b;\n\t        array[2] = 0;\n\t        array[3] = this.c;\n\t        array[4] = this.d;\n\t        array[5] = 0;\n\t        array[6] = this.tx;\n\t        array[7] = this.ty;\n\t        array[8] = 1;\n\t    }else{\n\t        array[0] = this.a;\n\t        array[1] = this.c;\n\t        array[2] = this.tx;\n\t        array[3] = this.b;\n\t        array[4] = this.d;\n\t        array[5] = this.ty;\n\t        array[6] = 0;\n\t        array[7] = 0;\n\t        array[8] = 1;\n\t    }\n\t    return array;\n\t};\n\t\n\t/**\n\t * 将坐标点与矩阵左乘\n\t *\n\t * @param pos {object} 原始点\n\t * @param newPos {object} 变换之后的点\n\t * @return {object} 返回数组\n\t */\n\tMatrix.prototype.apply = function(pos, newPos){\n\t    newPos = newPos || {};\n\t    newPos.x = this.a * pos.x + this.c * pos.y + this.tx;\n\t    newPos.y = this.b * pos.x + this.d * pos.y + this.ty;\n\t    return newPos;\n\t};\n\t/**\n\t * 将坐标点与转置矩阵左乘\n\t *\n\t * @param pos {object} 原始点\n\t * @param newPos {object} 变换之后的点\n\t * @return {object} 变换之后的点\n\t */\n\tMatrix.prototype.applyInverse = function(pos, newPos){\n\t    var id = 1 / (this.a * this.d + this.c * -this.b);\n\t    newPos.x = this.d * id * pos.x + -this.c * id * pos.y + (this.ty * this.c - this.tx * this.d) * id;\n\t    newPos.y = this.a * id * pos.y + -this.b * id * pos.x + (-this.ty * this.a + this.tx * this.b) * id;\n\t    return newPos;\n\t};\n\t/**\n\t * 位移操作\n\t *\n\t * @return {this} \n\t */\n\tMatrix.prototype.translate = function(x, y){\n\t    this.tx += x;\n\t    this.ty += y;\n\t    return this;\n\t};\n\t/**\n\t * 缩放操作\n\t *\n\t * @return {this} \n\t */\n\tMatrix.prototype.scale = function(x, y){\n\t    this.a *= x;\n\t    this.d *= y;\n\t    this.c *= x;\n\t    this.b *= y;\n\t    this.tx *= x;\n\t    this.ty *= y;\n\t    return this;\n\t};\n\t/**\n\t * 旋转操作\n\t *\n\t * @return {this} \n\t */\n\tMatrix.prototype.rotate = function(angle){\n\t    var cos = Math.cos( angle );\n\t    var sin = Math.sin( angle );\n\t    var a1 = this.a;\n\t    var c1 = this.c;\n\t    var tx1 = this.tx;\n\t    this.a = a1 * cos-this.b * sin;\n\t    this.b = a1 * sin+this.b * cos;\n\t    this.c = c1 * cos-this.d * sin;\n\t    this.d = c1 * sin+this.d * cos;\n\t    this.tx = tx1 * cos - this.ty * sin;\n\t    this.ty = tx1 * sin + this.ty * cos;\n\t    return this;\n\t};\n\t/**\n\t * 矩阵相乘\n\t *\n\t * @return {this} \n\t */\n\tMatrix.prototype.append = function(matrix){\n\t    var a1 = this.a;\n\t    var b1 = this.b;\n\t    var c1 = this.c;\n\t    var d1 = this.d;\n\t    this.a  = matrix.a * a1 + matrix.b * c1;\n\t    this.b  = matrix.a * b1 + matrix.b * d1;\n\t    this.c  = matrix.c * a1 + matrix.d * c1;\n\t    this.d  = matrix.c * b1 + matrix.d * d1;\n\t    this.tx = matrix.tx * a1 + matrix.ty * c1 + this.tx;\n\t    this.ty = matrix.tx * b1 + matrix.ty * d1 + this.ty;\n\t    return this;\n\t};\n\t/**\n\t * 单位矩阵\n\t *\n\t * @return {this} \n\t */\n\tMatrix.prototype.identity = function(){\n\t    this.a = 1;\n\t    this.b = 0;\n\t    this.c = 0;\n\t    this.d = 1;\n\t    this.tx = 0;\n\t    this.ty = 0;\n\t    return this;\n\t};\n\t/**\n\t * 快速设置矩阵各个分量\n\t *\n\t * @return {this} \n\t */\n\tMatrix.prototype.setTransform = function (x, y, pivotX, pivotY, scaleX, scaleY, rotation, skewX, skewY)\n\t{\n\t    var a, b, c, d, sr, cr, cy, sy, nsx, cx;\n\t\n\t    sr  = Math.sin(rotation);\n\t    cr  = Math.cos(rotation);\n\t    cy  = Math.cos(skewY);\n\t    sy  = Math.sin(skewY);\n\t    nsx = -Math.sin(skewX);\n\t    cx  =  Math.cos(skewX);\n\t\n\t    a  =  cr * scaleX;\n\t    b  =  sr * scaleX;\n\t    c  = -sr * scaleY;\n\t    d  =  cr * scaleY;\n\t\n\t    this.a  = cy * a + sy * c;\n\t    this.b  = cy * b + sy * d;\n\t    this.c  = nsx * a + cx * c;\n\t    this.d  = nsx * b + cx * d;\n\t\n\t    this.tx = x + ( pivotX * a + pivotY * c );\n\t    this.ty = y + ( pivotX * b + pivotY * d );\n\t\n\t    return this;\n\t};\n\tJC.IDENTITY = new Matrix();\n\tJC.TEMP_MATRIX = new Matrix();\n\t\n\t\n\t/**\n\t * 显示对象的基类\n\t *\n\t * @class\n\t * @memberof JC\n\t */\n\tfunction DisplayObject(){\n\t    this._ready = true;\n\t\n\t\tthis.visible = true;\n\t\tthis.worldAlpha = 1;\n\t\tthis.alpha = 1;\n\t\n\t\tthis.scaleX = 1;\n\t\tthis.scaleY = 1;\n\t\n\t\tthis.skewX = 0;\n\t\tthis.skewY = 0;\n\t\n\t\tthis.rotation = 0;\n\t\tthis.rotationCache = 0;\n\t    this._sr = 0;\n\t    this._cr = 1;\n\t\t\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\t\t\n\t\tthis.pivotX = 0;\n\t\tthis.pivotY = 0;\n\t\n\t\tthis.mask = null;\n\t\n\t\tthis.parent = null;\n\t\tthis.worldTransform = new Matrix();\n\t\n\t    this.event = new JC.Eventer();\n\t    this.passEvent = false;\n\t    this.bound = [];\n\t\n\t\n\t    this.Animator = new JC.Animator(this);\n\t}\n\tJC.DisplayObject = DisplayObject;\n\tDisplayObject.prototype.constructor = JC.DisplayObject;\n\t\n\tObject.defineProperty(DisplayObject.prototype, 'scale', {\n\t    get: function() {\n\t        return this.scaleX;\n\t    },\n\t    set: function(scale) {\n\t        this.scaleX = this.scaleY = scale;\n\t    }\n\t});\n\t\n\t/**\n\t * fromTo动画，指定动画的启始位置和结束位置\n\t *\n\t * ```js\n\t * // 扩展缓动函数，缓动函数库详见目录下的util/tween.js\n\t * JC.TWEEN.extend({    \n\t *    bounceOut: function(t, b, c, d){\n\t *        if ((t/=d) < (1/2.75)) {\n\t *            return c*(7.5625*t*t) + b;\n\t *        } else if (t < (2/2.75)) {\n\t *            return c*(7.5625*(t-=(1.5/2.75))*t + 0.75) + b;\n\t *        } else if (t < (2.5/2.75)) {\n\t *            return c*(7.5625*(t-=(2.25/2.75))*t + 0.9375) + b;\n\t *        }\n\t *        return c*(7.5625*(t-=(2.625/2.75))*t + 0.984375) + b;\n\t *    }\n\t * });\n\t * var dispayObj = new JC.Text('Hello JC','bold 36px Arial','#c32361');\n\t * dispayObj.fromTo({\n\t *   from: {x: 100},\n\t *   to: {x: 200},\n\t *   ease: 'bounceOut', // 执行动画使用的缓动函数 默认值为 easeBoth\n\t *   repeats: 10, // 动画运动完后再重复10次\n\t *   infinity: true, // 无限循环动画\n\t *   alternate: true, // 偶数次的时候动画回放\n\t *   duration: 1000, // 动画时长 ms单位 默认 300ms\n\t *   onUpdate: function(state,rate){},\n\t *   onCompelete: function(){ console.log('end'); } // 动画执行结束回调\n\t * });\n\t * ```\n\t *\n\t * @param opts {object} 过渡动画的配置\n\t * @param clear {boolean} 是否去掉之前的动画\n\t */\n\tDisplayObject.prototype.fromTo = function(opts,clear){\n\t    return this.Animator.fromTo(opts,clear);\n\t};\n\t\n\t/**\n\t * to动画，物体当前位置为动画的启始位置，只需制定动画的结束位置\n\t *\n\t * @param opts {object} 过渡动画的配置\n\t * @param clear {boolean} 是否去掉之前的动画\n\t */\n\tDisplayObject.prototype.to = function(opts,clear){\n\t    return this.Animator.to(opts,clear);\n\t};\n\t\n\t/**\n\t * to动画，物体当前位置为动画的启始位置，只需制定动画的结束位置\n\t *\n\t * @param opts {object} 过渡动画的配置\n\t * @param clear {boolean} 是否去掉之前的动画\n\t */\n\tDisplayObject.prototype.motion = function(opts,clear){\n\t    return this.Animator.motion(opts,clear);\n\t};\n\t\n\t/**\n\t * keyFrames动画，设置物体动画的keyframe，可以为相邻的两个keyFrames之前配置差值时间及时间函数\n\t *\n\t * @param [opts] {object} 关键帧动画的配置\n\t * @param clear {boolean} 是否去掉该对象身上的动画\n\t */\n\tDisplayObject.prototype.keyFrames = function(opts,clear){\n\t    return this.Animator.keyFrames(opts);\n\t};\n\t\n\t/**\n\t * 检测是否可见\n\t *\n\t * @method isVisible\n\t * @private\n\t */\n\tDisplayObject.prototype.isVisible = function(){\n\t\treturn !!(this.visible && this.alpha>0 && this.scaleX*this.scaleY!==0);\n\t};\n\t\n\t/**\n\t * 移除遮罩\n\t *\n\t */\n\tDisplayObject.prototype.removeMask = function(){\n\t\tthis.mask = null;\n\t};\n\tDisplayObject.prototype.setVal = function(vals){\n\t\tif(vals===undefined)return;\n\t\tfor(var key in vals){\n\t\t\tif(this[key]===undefined){\n\t\t\t\tcontinue;\n\t\t\t}else{\n\t\t\t\tthis[key] = vals[key];\n\t\t\t}\n\t\t}\n\t};\n\tDisplayObject.prototype.updateMe = function(){\n\t    var pt = this.parent.worldTransform;\n\t    var wt = this.worldTransform;\n\t\n\t    var a, b, c, d, tx, ty;\n\t\n\t    if(this.skewX || this.skewY){\n\t\n\t        JC.TEMP_MATRIX.setTransform(\n\t            this.x,\n\t            this.y,\n\t            this.pivotX,\n\t            this.pivotY,\n\t            this.scaleX,\n\t            this.scaleY,\n\t            this.rotation*JC.DTR,\n\t            this.skewX*JC.DTR,\n\t            this.skewY*JC.DTR\n\t        );\n\t\n\t        wt.a  = JC.TEMP_MATRIX.a  * pt.a + JC.TEMP_MATRIX.b  * pt.c;\n\t        wt.b  = JC.TEMP_MATRIX.a  * pt.b + JC.TEMP_MATRIX.b  * pt.d;\n\t        wt.c  = JC.TEMP_MATRIX.c  * pt.a + JC.TEMP_MATRIX.d  * pt.c;\n\t        wt.d  = JC.TEMP_MATRIX.c  * pt.b + JC.TEMP_MATRIX.d  * pt.d;\n\t        wt.tx = JC.TEMP_MATRIX.tx * pt.a + JC.TEMP_MATRIX.ty * pt.c + pt.tx;\n\t        wt.ty = JC.TEMP_MATRIX.tx * pt.b + JC.TEMP_MATRIX.ty * pt.d + pt.ty;\n\t    }else{\n\t        if(this.rotation % 360){\n\t            if(this.rotation !== this.rotationCache){\n\t                this.rotationCache = this.rotation;\n\t                this._sr = Math.sin(this.rotation*JC.DTR);\n\t                this._cr = Math.cos(this.rotation*JC.DTR);\n\t            }\n\t\n\t            a  =  this._cr * this.scaleX;\n\t            b  =  this._sr * this.scaleX;\n\t            c  = -this._sr * this.scaleY;\n\t            d  =  this._cr * this.scaleY;\n\t            tx =  this.x;\n\t            ty =  this.y;\n\t\n\t            if(this.pivotX || this.pivotY){\n\t                tx -= this.pivotX * a + this.pivotY * c;\n\t                ty -= this.pivotX * b + this.pivotY * d;\n\t            }\n\t            wt.a  = a  * pt.a + b  * pt.c;\n\t            wt.b  = a  * pt.b + b  * pt.d;\n\t            wt.c  = c  * pt.a + d  * pt.c;\n\t            wt.d  = c  * pt.b + d  * pt.d;\n\t            wt.tx = tx * pt.a + ty * pt.c + pt.tx;\n\t            wt.ty = tx * pt.b + ty * pt.d + pt.ty; \n\t        }else{\n\t            a  = this.scaleX;\n\t            d  = this.scaleY;\n\t\n\t            tx = this.x - this.pivotX * a;\n\t            ty = this.y - this.pivotY * d;\n\t\n\t            wt.a  = a  * pt.a;\n\t            wt.b  = a  * pt.b;\n\t            wt.c  = d  * pt.c;\n\t            wt.d  = d  * pt.d;\n\t            wt.tx = tx * pt.a + ty * pt.c + pt.tx;\n\t            wt.ty = tx * pt.b + ty * pt.d + pt.ty;\n\t        }\n\t    }\n\t    this.worldAlpha = this.alpha * this.parent.worldAlpha;\n\t};\n\tDisplayObject.prototype.upAnimation = function(snippet){\n\t    this.Animator.update(snippet);\n\t};\n\tDisplayObject.prototype.setTransform = function(ctx){\n\t\tvar matrix = this.worldTransform;\n\t\tctx.globalAlpha = this.worldAlpha;\n\t\tctx.setTransform(matrix.a,matrix.b,matrix.c,matrix.d,matrix.tx,matrix.ty);\n\t};\n\t/**\n\t * 获取物体相对于canvas世界坐标系的坐标位置\n\t *\n\t * @return {object}\n\t */\n\tDisplayObject.prototype.getGlobalPos = function(){\n\t    return {x: this.worldTransform.tx,y: this.worldTransform.ty};\n\t};\n\t/**\n\t * 显示对象的事件绑定函数\n\t *\n\t * @param type {String} 事件类型\n\t * @param fn {Function} 回调函数\n\t */\n\tDisplayObject.prototype.on = function(type,fn){\n\t    this.event.on(type,fn);\n\t};\n\t/**\n\t * 显示对象的事件解绑函数\n\t *\n\t * @param type {String} 事件类型\n\t * @param fn {Function} 注册时回调函数的引用\n\t */\n\tDisplayObject.prototype.off = function(type,fn){\n\t    this.event.off(type,fn);\n\t};\n\t/**\n\t * 显示对象的一次性事件绑定函数\n\t *\n\t * @param type {String} 事件类型\n\t * @param fn {Function} 回调函数\n\t */\n\tDisplayObject.prototype.once = function(type,fn){\n\t    var This = this,\n\t        cb = function(ev){\n\t            if (fn) fn(ev);\n\t            This.event.off(type,cb);\n\t        };\n\t    this.event.on(type,cb);\n\t};\n\t/**\n\t * 获取当前坐标系下的监测区域\n\t *\n\t * @method getBound\n\t * @private\n\t */\n\tDisplayObject.prototype.getBound = function (){\n\t    var bound = [],\n\t        l = this.bound.length>>1;\n\t\n\t    for (var i = 0; i < l; i++) {\n\t        var p = this.worldTransform.apply({x: this.bound[i*2],y: this.bound[i*2+1]});\n\t        bound[i*2  ] = p.x;\n\t        bound[i*2+1] = p.y;\n\t    }\n\t    return bound;\n\t};\n\t/**\n\t * 设置显示对象的监测区域\n\t *\n\t * @param points {Array} 区域的坐标点 [x0,y0 ..... xn,yn]\n\t * @param needless {boolean} 当该值为true，当且仅当this.bound为空时才会更新点击区域。默认为false，总是更新点击区域。\n\t * @return {Array}\n\t */\n\tDisplayObject.prototype.setBound = function (points,needless){\n\t    var l = this.bound.length;\n\t    if(l>4&&needless)return;\n\t    points = points||[\n\t        -this.regX,this.regY,\n\t        -this.regX,this.regY-this.height,\n\t        -this.regX+this.width,this.regY-this.height,\n\t        -this.regX+this.width,this.regY\n\t    ];\n\t    this.bound = points;\n\t};\n\tDisplayObject.prototype.ContainsPoint = function (p,px,py){\n\t    var n = p.length>>1;\n\t    var ax, ay = p[2*n-3]-py, bx = p[2*n-2]-px, by = p[2*n-1]-py;\n\t    \n\t    //var lup = by > ay;\n\t    for(var i=0; i<n; i++){\n\t        ax = bx;  ay = by;\n\t        bx = p[2*i  ] - px;\n\t        by = p[2*i+1] - py;\n\t        if(ay==by) continue;\n\t        lup = by>ay;\n\t    }\n\t    \n\t    var depth = 0;\n\t    for(i=0; i<n; i++){\n\t        ax = bx;  ay = by;\n\t        bx = p[2*i  ] - px;\n\t        by = p[2*i+1] - py;\n\t        if(ay< 0 && by< 0) continue;\n\t        if(ay> 0 && by> 0) continue;\n\t        if(ax< 0 && bx< 0) continue;\n\t        \n\t        if(ay==by && Math.min(ax,bx)<=0) return true;\n\t        if(ay==by) continue;\n\t        \n\t        var lx = ax + (bx-ax)*(-ay)/(by-ay);\n\t        if(lx===0) return true;\n\t        if(lx> 0) depth++;\n\t        if(ay===0 &&  lup && by>ay) depth--;\n\t        if(ay===0 && !lup && by<ay) depth--;\n\t        lup = by>ay;\n\t    }\n\t    return (depth & 1) == 1;\n\t};\n\t\n\t\n\t/**\n\t * 显示对象容器，继承至DisplayObject\n\t *\n\t * ```js\n\t * var container = new JC.Container();\n\t * container.addChilds(sprite);\n\t * ```\n\t *\n\t * @class\n\t * @extends JC.DisplayObject\n\t * @memberof JC\n\t */\n\tfunction Container(){\n\t\tJC.DisplayObject.call( this );\n\t    this.cds = [];\n\t    this.timeScale = 1;\n\t    this.paused = false;\n\t}\n\tJC.Container = Container;\n\tContainer.prototype = Object.create( JC.DisplayObject.prototype );\n\tContainer.prototype.constructor = JC.Container;\n\t\n\t/**\n\t * 向容器添加一个物体\n\t * \n\t * ```js\n\t * container.addChilds(sprite,sprite2,text3,graphice);\n\t * ```\n\t *\n\t * @param child {JC.Container}\n\t * @return {JC.Container}\n\t */\n\tContainer.prototype.addChilds = function (cd){\n\t    if(cd === undefined)return cd;\n\t    var l = arguments.length;\n\t    if(l > 1){\n\t        for (var i=0; i<l; i++) { this.addChilds(arguments[i]); }\n\t        return arguments[l-1];\n\t    }\n\t    if(cd.parent){ cd.parent.removeChilds(cd); }\n\t    cd.parent = this;\n\t    this.cds.push(cd);\n\t    return cd;\n\t};\n\t/**\n\t * 从容器移除一个物体\n\t * \n\t * ```js\n\t * container.removeChilds(sprite,sprite2,text3,graphice);\n\t * ```\n\t *\n\t * @param child {JC.Container}\n\t * @return {JC.Container}\n\t */\n\tContainer.prototype.removeChilds = function (){\n\t    var l = arguments.length;\n\t    if(l > 1){\n\t        for (var i=0; i<l; i++) { this.removeChilds(arguments[i]); }\n\t    }else if(l===1){\n\t        for(var a=0;a<this.cds.length;a++){\n\t            if(this.cds[a]===arguments[0]){\n\t                this.cds.splice(a,1);\n\t                this.cds[a].parent = null;\n\t                a--;\n\t            }\n\t        }\n\t    }\n\t};\n\tContainer.prototype.updateTransform = function (snippet){\n\t    if (!this._ready) return;\n\t    snippet = this.timeScale*snippet;\n\t\tif (!this.paused) this.upAnimation(snippet);\n\t\tthis.updateMe();\n\t\tif (this.cds.length>0) this.updateChilds(snippet);\n\t};\n\tContainer.prototype.updateChilds = function (snippet){\n\t    for (var i=0,l=this.cds.length; i<l; i++) {\n\t        var cd = this.cds[i];\n\t        cd.updateTransform(snippet);\n\t    }\n\t};\n\tContainer.prototype.render = function (ctx){\n\t\tctx.save();\n\t\tthis.setTransform(ctx);\n\t\tif (this.mask) this.mask.render(ctx);\n\t\tthis.renderMe(ctx);\n\t\tif (this.cds.length>0) this.renderChilds(ctx);\n\t\tctx.restore();\n\t};\n\tContainer.prototype.renderMe = function (){\n\t    return true;\n\t};\n\tContainer.prototype.renderChilds = function (ctx){\n\t    for (var i=0,l=this.cds.length; i<l; i++) {\n\t        var cd = this.cds[i];\n\t        if (!cd.isVisible()||!cd._ready)continue;\n\t        cd.render(ctx);\n\t    }\n\t};\n\tContainer.prototype.noticeEvent = function (ev){\n\t    var i = this.cds.length-1;\n\t    while(i>=0){\n\t        var child = this.cds[i];\n\t        if(child.visible){\n\t            child.noticeEvent(ev);\n\t            if(ev.target)break;\n\t        }\n\t        i--;\n\t    }\n\t    this.upEvent(ev);\n\t};\n\tContainer.prototype.upEvent = function(ev){\n\t    if(!this._ready)return;\n\t    if(ev.target||(!this.passEvent&&this.hitTest(ev))){\n\t        if(!ev.cancleBubble||ev.target===this){\n\t            if(!(this.event.listeners[ev.type]&&this.event.listeners[ev.type].length>0))return;\n\t            this.event.emit(ev);\n\t        }\n\t    }\n\t};\n\tContainer.prototype.hitTest = function(ev){\n\t    if (ev.type==='touchmove'||ev.type==='touchend'||ev.type==='mousemove'||ev.type==='mouseup'){\n\t        var re = this.event.touchstarted;\n\t        if(re)ev.target = this;\n\t        if(ev.type==='touchend'||ev.type==='mouseup')this.event.touchstarted = false;\n\t        return re;\n\t    }\n\t    if(this.hitTestMe(ev)){\n\t        ev.target = this;\n\t        if(ev.type==='touchstart'||ev.type==='mousedown')this.event.touchstarted = true;\n\t        return true;\n\t    }\n\t    return false;\n\t};\n\tContainer.prototype.hitTestMe = function(ev){\n\t    return this.ContainsPoint(this.getBound(),ev.global.x,ev.global.y);\n\t};\n\tContainer.prototype.pause = function(){\n\t    this.paused = true;\n\t};\n\tContainer.prototype.start = function(){\n\t    this.paused = false;\n\t};\n\tContainer.prototype.cancle = function(){\n\t    this.Animator.clear();\n\t};\n\t\n\t\n\t/**\n\t * 位图精灵图，继承至Container\n\t *\n\t * ```js\n\t * var loadBox = JC.loaderUtil({\n\t *    frames: './images/frames.png'\n\t * });\n\t * var sprite = new JC.Sprite({\n\t *      texture: loadBox.getById('frames'),\n\t *      width: 165,\n\t *      height: 292,\n\t *      count: 38,\n\t *      sx: 0,\n\t *      sy: 0,\n\t *      animations: {\n\t *          fall: {start: 0,end: 4,next: 'stand'},\n\t *          fly: {start: 5,end: 9,next: 'stand'},\n\t *          stand: {start: 10,end: 39},\n\t *          walk: {start: 40,end: 59,next: 'stand'}\n\t *      }\n\t * });\n\t * ```\n\t *\n\t * @class\n\t * @extends JC.Container\n\t * @memberof JC\n\t */\n\tfunction Sprite(opts){\n\t\tJC.Container.call( this );\n\t\n\t    this.texture = opts.texture;\n\t    if(this.texture.loaded){\n\t        this.upTexture(opts);\n\t    }else{\n\t        var This = this;\n\t        this._ready = false;\n\t        this.texture.on('load',function(){\n\t            This.upTexture(opts);\n\t            This._ready = true;\n\t        });\n\t    }\n\t\n\t    this.MovieClip = new JC.MovieClip(this,opts);\n\t    \n\t}\n\tJC.Sprite = Sprite;\n\tSprite.prototype = Object.create( JC.Container.prototype );\n\tSprite.prototype.constructor = JC.Sprite;\n\tSprite.prototype.upTexture = function(opts){\n\t    this._textureW = opts.texture.width;\n\t    this._textureH = opts.texture.height;\n\t    this.width = opts.width||this._textureW;\n\t    this.height = opts.height||this._textureH;\n\t    this.regX = this.width>>1;\n\t    this.regY = this.height>>1;\n\t    this.setBound(null,true);\n\t};\n\tSprite.prototype.upAnimation = function(snippet){\n\t    this.Animator.update(snippet);\n\t    this.MovieClip.update(snippet);\n\t};\n\t/**\n\t * 播放逐祯动画\n\t *\n\t *```js\n\t * var sprite = new JC.Sprite({\n\t *      texture: loadBox.getById('dragon'),\n\t *      width: 210,\n\t *      height: 231,\n\t *      animations: {\n\t *          fall: {start: 0,end: 4,next: 'stand'},\n\t *          fly: {start: 5,end: 9,next: 'stand'},\n\t *          stand: {start: 10,end: 39},\n\t *          walk: {start: 40,end: 59,next: 'stand'}\n\t *      }\n\t * })\n\t * sprite.playMovie({\n\t *      movie: 'walk',\n\t *      fps: 60, // 逐帧帧率 默认20\n\t *      repeats: 1,\n\t *      infinity: true,\n\t *      alternate: true,\n\t *      fillMode: 2,  // 逐帧结束后元素停留在哪一帧，帧序号为从0开始的索引\n\t *      onCompelete: function(){console.log('over');}\n\t * });\n\t * ```\n\t *\n\t * @param opts {object}\n\t */\n\tSprite.prototype.playMovie = function(opts){\n\t    this.MovieClip.playMovie(opts);\n\t};\n\t// Sprite.prototype.getFramePos = function(){\n\t//     var obj = {\n\t//             x: this.sW,\n\t//             y: this.sH\n\t//         };\n\t//     if(this._cF>0){\n\t//         var row = this._textureW/this.width >> 0;\n\t//         var lintRow = this.sW/this.width >> 0;\n\t//         var lintCol = this.sH/this.height >> 0;\n\t//         var mCol = lintCol+(lintRow+this._cF)/row >> 0;\n\t//         var mRow = (lintRow+this._cF)%row;\n\t//         obj.x = mRow*this.width;\n\t//         obj.y = mCol*this.height;\n\t//     }\n\t//     return obj;\n\t// };\n\tSprite.prototype.renderMe = function (ctx){\n\t    if (!this._ready) return;\n\t    var pos = this.MovieClip.getFramePos();\n\t    ctx.drawImage(this.texture.texture, pos.x, pos.y, this.width, this.height, -this.regX, -this.regY, this.width, this.height);\n\t    // this.upFS();\n\t};\n\t// Sprite.prototype.upFS = function (){\n\t//     if(!this.canFrames)return;\n\t//     var time = Date.now(),\n\t//         ok = time-this.preTime>this.interval;\n\t//     if(ok){\n\t//         this._cF++;\n\t//         this.preTime = time;\n\t//     }\n\t//     if(this._cF>=this.count){\n\t//         this._cF = 0;\n\t//         if(this.repeats<=0&&!this.loop){\n\t//             this.canFrames = false;\n\t//             this._cF = this.fillMode;\n\t//             this.onCompelete&&this.onCompelete();\n\t//         }\n\t//         if(!this.loop)this.repeats--;\n\t//     }\n\t// };\n\t// Object.defineProperty(Sprite.prototype, 'interval', {\n\t//     get: function() {\n\t//         return this.fps>0?1000/this.fps>>0:20;\n\t//     }\n\t// });\n\t// Sprite.prototype.goFrames = function (opts){\n\t//     if(this.count<=1)return;\n\t//     opts = opts||{};\n\t//     this.canFrames = true;\n\t//     this.infinity = opts.infinity||false;\n\t//     this.alternate = opts.alternate||false;\n\t//     this.repeats = opts.repeats||0;\n\t//     this.onCompelete = opts.onCompelete||null;\n\t//     this.fillMode = opts.fillMode||0;\n\t//     this.fps = opts.fps||this.fps;\n\t//     this.preTime = Date.now();\n\t//     this._cF = 0;\n\t// };\n\t\n\t/*  TODO: drawTriangles a mesh frame \n\t *  can have perspective effect\n\t *\n\t *\n\t */\n\tfunction Strip(){}\n\t\n\t\n\t\n\t/**\n\t * 形状对象，继承至Container\n\t * \n\t * \n\t * ```js\n\t * var graphics = new JC.Graphics();\n\t * ```\n\t *\n\t * @class\n\t * @extends JC.Container\n\t * @memberof JC\n\t */\n\tfunction Graphics(){\n\t\tJC.Container.call( this );\n\t\tthis.cacheCanvas = null;\n\t}\n\tJC.Graphics = Graphics;\n\tGraphics.prototype = Object.create( JC.Container.prototype );\n\tGraphics.prototype.constructor = JC.Graphics;\n\tGraphics.prototype.renderMe = function (ctx){\n\t    if(!this.draw)return;\n\t\tif(this.cached||this.cache){\n\t\t\tif(this.cache){\n\t\t\t\tthis.cacheCanvas = this.cacheCanvas||document.createElement('canvas');\n\t\t\t\tthis.width = this.cacheCanvas.width = this.session.width;\n\t\t\t\tthis.height = this.cacheCanvas.height = this.session.height;\n\t\t\t\tthis._ctx = this.cacheCanvas.getContext(\"2d\");\n\t            this._ctx.clearRect(0,0,this.width,this.height);\n\t            this._ctx.save();\n\t            this._ctx.setTransform(1,0,0,1,this.session.center.x,this.session.center.y);\n\t        \tthis._drawBack(this._ctx);\n\t            this._ctx.restore();\n\t        \tthis.cached = true;\n\t        \tthis.cache = false;\n\t\t\t}\n\t\t\tthis.cacheCanvas&&ctx.drawImage(this.cacheCanvas, 0, 0, this.width, this.height, -this.session.center.x, -this.session.center.x, this.width, this.height);\n\t\t}else{\n\t        this._drawBack(ctx);\n\t\t}\n\t};\n\tGraphics.prototype._drawBack = function (ctx){\n\t    if(typeof this.draw === 'function'){\n\t        this.draw(ctx);\n\t    }else if(typeof this.draw === 'object' && typeof this.draw.render === 'function'){\n\t        this.draw.render(ctx);\n\t    }\n\t};\n\t/**\n\t * 图形绘制挂载函数\n\t *\n\t *```js\n\t *  var cacheMap = new JC.Graphics();  // 创建形状绘制对象\n\t *\n\t *  cacheMap.drawCall(function(ctx){\n\t *      for(var i = 50;i>0;i--){\n\t *          ctx.strokeStyle = COLOURS[i%COLOURS.length];\n\t *          ctx.beginPath();\n\t *          ctx.arc( 0, 0, i, 0, Math.PI*2 );\n\t *          ctx.stroke();\n\t *      }\n\t *  },{\n\t *      cache: true,\n\t *      session: {center: {x: 50,y: 50},width:100,height:100}\n\t *  });\n\t * ```\n\t *\n\t * @param fn {function}\n\t * @param opts {object}\n\t */\n\tGraphics.prototype.drawCall = function(fn,opts){\n\t\tif(fn===undefined)return;\n\t    opts = opts||{};\n\t\tthis.cache = opts.cache||false;\n\t\tthis.cached = false;\n\t\tthis.session = opts.session||{center: {x: 0,y: 0},width:100,height:100};\n\t\tthis.draw = fn||null;\n\t};\n\t\n\t\n\t\n\t/**\n\t * 文本，继承至Container\n\t * \n\t * \n\t * ```js\n\t * var text = new JC.Text('JC jcc2d canvas renderer','bold 36px Arial','#f00');\n\t * ```\n\t *\n\t * @class\n\t * @extends JC.Container\n\t * @memberof JC\n\t */\n\tfunction Text(text,font,color){\n\t\tJC.Container.call( this );\n\t\tthis.text = text.toString();\n\t\tthis.font = font || 'bold 12px Arial';\n\t\tthis.color = color || '#000000';\n\t\n\t    this.textAlign = \"center\"; // start left center end right\n\t    this.textBaseline = \"middle\"; // top bottom middle alphabetic hanging\n\t\n\t\n\t    this.outline = 0;\n\t    this.lineWidth = 1;\n\t\n\t    this.US = false; // use stroke\n\t    this.UF = true; // use fill\n\t\n\t    // ctx.measureText(str) 返回指定文本的宽度\n\t}\n\tJC.Text = Text;\n\tText.prototype = Object.create( JC.Container.prototype );\n\tText.prototype.constructor = JC.Text;\n\tText.prototype.renderMe = function(ctx){\n\t    ctx.font = this.font;\n\t    ctx.textAlign = this.textAlign;\n\t    ctx.textBaseline = this.textBaseline;\n\t    if(this.UF){\n\t        ctx.fillStyle = this.color;\n\t        ctx.fillText(this.text,0,0);\n\t    }\n\t    if(this.US){\n\t        ctx.lineWidth = this.lineWidth;\n\t        ctx.strokeStyle = this.color;\n\t        ctx.strokeText(this.text,0,0);\n\t    }\n\t};\n\t\n\t\n\t\n\t/**\n\t * 舞台对象，继承至Container\n\t * \n\t * \n\t * ```js\n\t * var stage = new JC.Stage('demo_canvas','#fff');\n\t * ```\n\t *\n\t * @class\n\t * @extends JC.Container\n\t * @memberof JC\n\t */\n\tfunction Stage(id,bgColor){\n\t\tJC.Container.call( this );\n\t    this.type = 'stage';\n\t    this.canvas = document.getElementById(id);\n\t    this.ctx = this.canvas.getContext('2d');\n\t    this.cds = [];\n\t    this.canvas.style.backgroundColor = bgColor || \"transparent\";\n\t    this.autoClear = true;\n\t    this.setStyle = false;\n\t    this.width = this.canvas.width;\n\t    this.height = this.canvas.height;\n\t\n\t    if(\"imageSmoothingEnabled\" in this.ctx)\n\t        this.ctx.imageSmoothingEnabled = true;\n\t    else if(\"webkitImageSmoothingEnabled\" in this.ctx)\n\t        this.ctx.webkitImageSmoothingEnabled = true;\n\t    else if(\"mozImageSmoothingEnabled\" in this.ctx)\n\t        this.ctx.mozImageSmoothingEnabled = true;\n\t    else if(\"oImageSmoothingEnabled\" in this.ctx)\n\t        this.ctx.oImageSmoothingEnabled = true;\n\t\n\t    this.initEvent();\n\t\n\t    this.pt = null;\n\t\n\t}\n\tJC.Stage = Stage;\n\tStage.prototype = Object.create( JC.Container.prototype );\n\tStage.prototype.constructor = JC.Stage;\n\t/**\n\t * 舞台尺寸设置\n\t *\n\t *\n\t * @param w {number} 可以是屏幕的宽度\n\t * @param h {number} 可以是屏幕的高度\n\t */\n\tStage.prototype.resize = function (w,h,sw,sh){\n\t    this.width = this.canvas.width = w;\n\t    this.height = this.canvas.height = h;\n\t    if(this.setStyle&&sw&&sh){\n\t        this.canvas.style.width = sw+'px';\n\t        this.canvas.style.height = sh+'px';\n\t    }\n\t};\n\tStage.prototype.render = function (){\n\t    if(this.pt===null||Date.now()-this.pt>200)this.pt = Date.now();\n\t    var snippet = Date.now()-this.pt;\n\t    snippet = snippet <= 0 ? 10: snippet;\n\t    this.pt += snippet;\n\t    this.updateChilds(this.timeScale*snippet);\n\t\n\t    this.ctx.setTransform(1,0,0,1,0,0);\n\t    if(this.autoClear)this.ctx.clearRect(0,0,this.width,this.height);\n\t    this.renderChilds(this.ctx);\n\t};\n\tStage.prototype.initEvent = function (){\n\t    var This = this;\n\t    this.canvas.addEventListener('click',function(ev){\n\t        This.eventProxy(ev);\n\t    },false);\n\t    this.canvas.addEventListener('touchstart',function(ev){\n\t        // ev.preventDefault();\n\t        This.eventProxy(ev);\n\t    },false);\n\t    this.canvas.addEventListener('touchmove',function(ev){\n\t        ev.preventDefault();\n\t        This.eventProxy(ev);\n\t    },false);\n\t    this.canvas.addEventListener('touchend',function(ev){\n\t        // ev.preventDefault();\n\t        This.eventProxy(ev);\n\t    },false);\n\t    this.canvas.addEventListener('mousedown',function(ev){\n\t        // ev.preventDefault();\n\t        This.eventProxy(ev);\n\t    },false);\n\t    this.canvas.addEventListener('mousemove',function(ev){\n\t        ev.preventDefault();\n\t        This.eventProxy(ev);\n\t    },false);\n\t    this.canvas.addEventListener('mouseup',function(ev){\n\t        // ev.preventDefault();\n\t        This.eventProxy(ev);\n\t    },false);\n\t};\n\tStage.prototype.eventProxy = function (ev){\n\t    var evd = this.fixCoord(ev);\n\t    var i = this.cds.length-1;\n\t    while(i>=0){\n\t        var child = this.cds[i];\n\t        if(child.visible){\n\t            child.noticeEvent(evd);\n\t            if(evd.target)break;\n\t        }\n\t        i--;\n\t    }\n\t};\n\tStage.prototype.fixCoord = function (ev){\n\t    var evd = new JC.InteractionData(),\n\t        offset = this.getPos(this.canvas);\n\t    evd.originalEvent = ev;\n\t    evd.type = ev.type;\n\t\n\t    evd.ratio = this.width/this.canvas.offsetWidth;\n\t    if(ev.touches){\n\t        evd.touches = [];\n\t        if(ev.touches.length>0){\n\t            for(var i=0;i<ev.touches.length;i++){\n\t                evd.touches[i] = {};\n\t                evd.touches[i].global = {};\n\t                evd.touches[i].global.x = (ev.touches[i].pageX-offset.x)*evd.ratio;\n\t                evd.touches[i].global.y = (ev.touches[i].pageY-offset.y)*evd.ratio;\n\t            }\n\t            evd.global = evd.touches[0].global;\n\t        }\n\t    }else{\n\t        evd.global.x = (ev.pageX-offset.x)*evd.ratio;\n\t        evd.global.y = (ev.pageY-offset.y)*evd.ratio;\n\t    }\n\t    return evd;\n\t};\n\tStage.prototype.getPos = function (obj){\n\t    var pos={};\n\t    if(obj.offsetParent){\n\t        var p = this.getPos(obj.offsetParent);\n\t        pos.x = obj.offsetLeft+p.x;\n\t        pos.y = obj.offsetTop+p.y;\n\t    }else{\n\t        pos.x = obj.offsetLeft;\n\t        pos.y = obj.offsetTop;\n\t    }\n\t    return pos;\n\t};\n\t\n\t\n\n\treturn JC;\n\n}));","\n/**\n * 简单拷贝json对象\n *\n * @name copyJSON\n * @memberof JC\n * @property {JC.copyJSON}\n */\n \nJC.copyJSON = function(json){\n    return JSON.parse(JSON.stringify(json));\n};\n\n/**\n * 将角度转化成弧度\n *\n * @name DTR\n * @memberof JC\n * @property {JC.DTR}\n */\n\nJC.DTR = Math.PI/180;\n\n/**\n * 将弧度转化成角度\n *\n * @name RTD\n * @memberof JC\n * @property {JC.RTD}\n */\n\nJC.RTD = 180/Math.PI;\n\nfunction _rt(val){\n    return Object.prototype.toString.call(val);\n}\n\n/**\n * 是否为数组\n *\n * @name isArray\n * @memberof JC\n * @property {JC.isArray}\n */\nJC.isArray = (function(){\n    var ks = _rt([]);\n    return function(object){\n        return Object.prototype.toString.call(object) === ks;\n    };\n})();\n\n/**\n * 是否为对象\n *\n * @name isObject\n * @memberof JC\n * @property {JC.isObject}\n */\nJC.isObject = (function(){\n    var ks = _rt({});\n    return function(object){\n        return Object.prototype.toString.call(object) === ks;\n    };\n})();\n\n/**\n * 是否为字符串\n *\n * @name isObject\n * @memberof JC\n * @property {JC.isObject}\n */\nJC.isString = (function(){\n    var ks = _rt('s');\n    return function(object){\n        return Object.prototype.toString.call(object) === ks;\n    };\n})();\n\n/**\n * 是否为数字\n *\n * @name isNumber\n * @memberof JC\n * @property {JC.isNumber}\n */\nJC.isNumber = (function(){\n    var ks = _rt(1);\n    return function(object){\n        return Object.prototype.toString.call(object) === ks;\n    };\n})();\n\n/**\n * 是否为函数\n *\n * @name isFunction\n * @memberof JC\n * @property {JC.isFunction}\n */\nJC.isFunction = (function(){\n    var ks = _rt(function(){});\n    return function(object){\n        return Object.prototype.toString.call(object) === ks;\n    };\n})();\n\n/**\n * 强化的随机数\n *\n * @name random\n * @memberof JC\n * @property {JC.random}\n */\n\nJC.random = function(min, max){\n    if (JC.isArray(min))\n        return min[~~(Math.random() * min.length)];\n    if (!JC.isNumber(max))\n        max = min || 1, min = 0;\n    return min + Math.random() * (max - min);\n};\n\n\n/**\n * 阿基米德求模\n *\n * @name euclideanModulo\n * @memberof JC\n * @property {JC.euclideanModulo}\n */\n\nJC.euclideanModulo = function(n, m){\n    return ((n % m) + m) % m;\n};\n\n\nJC.clamp = function(x, a, b) {\n    return (x < a) ? a : ((x > b) ? b : x);\n}\n\n","\n/**\n * jcc2d的事件消息对象的类\n *\n * @class JC.InteractionData\n * @constructor\n */\nfunction InteractionData(){\n    /**\n     * 转换到canvas坐标系统的事件触发点\n     *\n     * @property global\n     * @type Object\n     */\n    this.global = {x:-100000,y:-100000};\n\n    /**\n     * 事件源\n     *\n     * @property target\n     * @type JC.Container\n     */\n    this.target = null;\n\n    /**\n     * 浏览器的原始事件对象\n     *\n     * @property originalEvent\n     * @type Event\n     */\n    this.originalEvent = null;\n\n    /**\n     * 在canvas内阻止事件冒泡\n     *\n     * @property cancleBubble\n     * @type Boolean\n     */\n    this.cancleBubble = false;\n\n    /**\n     * canvas视窗和页面坐标的兑换比例\n     *\n     * @property ratio\n     * @type Number\n     */\n    this.ratio = 1;\n\n    /**\n     * 事件类型\n     *\n     * @property type\n     * @type String\n     */\n    this.type = '';\n}\nJC.InteractionData = InteractionData;\n\n\n\n/**\n * jcc2d的事件对象的类\n *\n * @class JC.Eventer\n * @constructor Eventer\n * @memberof JC\n */\nfunction Eventer(){\n    this.touchstarted = false;\n    this.mouseDowned = false;\n    this.listeners = {};\n}\n/**\n * 事件对象的事件绑定函数\n *\n * @param type {String} 事件类型\n * @param fn {Function} 回调函数\n * @private\n */\nEventer.prototype.on = function(type,fn){\n    this.listeners[type] = this.listeners[type]||[];\n    this.listeners[type].push(fn);\n};\n/**\n * 事件对象的事件解绑函数\n *\n * @param type {String} 事件类型\n * @param fn {Function} 注册时回调函数的引用\n * @private\n */\nEventer.prototype.off = function(type,fn){\n    var ears = this.listeners;\n    var cbs = ears[ type ];\n    var i = ears[type].length;\n    if (cbs&&i>0) {\n        if(fn){\n            while (i--) {\n                if (cbs[i] === fn) {\n                    cbs.splice(i, 1);\n                }\n            }\n        }else{\n            cbs.length = 0;\n        }\n    }\n};\n/**\n * 事件对象的触发事件函数\n *\n * @param ev {JC.InteractionData} 事件类型\n * @private\n */\nEventer.prototype.emit = function(ev){\n    if ( this.listeners === undefined ) return;\n    var ears = this.listeners;\n    var cbs = ears[ ev.type ];\n    if ( cbs !== undefined ) {\n        var length = cbs.length;\n        var i;\n        for ( i = 0; i < length; i ++ ) {\n            cbs[ i ].call( this, ev );\n        }\n    }\n};\nJC.Eventer = Eventer;","\n/**\n * 图片纹理类\n *\n * @class\n * @extends JC.Eventer\n * @memberof JC\n */\nfunction Texture(img){\n\tJC.Eventer.call( this );\n\tthis.texture = null;\n\tthis.width = 0;\n\tthis.height = 0;\n\tthis.loaded = false;\n\n\tthis.dispose(img);\n\n\tvar This = this;\n\tthis.on('load',function(){\n\t\tThis.width = This.texture.width;\n\t\tThis.height = This.texture.height;\n\t});\n}\nJC.Texture = Texture;\nTexture.prototype = Object.create( JC.Eventer.prototype );\nTexture.prototype.dispose = function(img){\n\tvar This = this;\n    if(typeof img === 'string'){\n    \tthis.texture = new Image();\n    \tthis.texture.crossOrigin = '';\n    \tthis.texture.src = img;\n    \tthis.texture.onload = function(){\n    \t\tThis.loaded = true;\n    \t\tThis.emit({type: 'load'});\n    \t};\n    \tthis.texture.onerror = function(){\n    \t\tThis.emit({type: 'error'});\n    \t};\n    }\n    if(img instanceof Image && img.width*img.height>0){\n    \tthis.texture = img;\n\t\tthis.width = img.width;\n\t\tthis.height = img.height;\n    }\n};\n\n\n\n\n/**\n * 图片资源加载器\n *\n * @class\n * @extends JC.Eventer\n * @memberof JC\n */\nfunction Loader(){\n\tJC.Eventer.call( this );\n\tthis.textures = {};\n\tthis._total = 0;\n\tthis._failed = 0;\n\tthis._received = 0;\n}\nJC.Loader = Loader;\nLoader.prototype = Object.create( JC.Eventer.prototype );\n\n/**\n * 开始加载资源\n * \n * ```js\n * var loadBox = new JC.Loader();\n * loadBox.load({\n * \t\tid: 'img/xxx.png'\n * });\n * ```\n *\n * @param srcMap {object}\n * @return {JC.Loader}\n */\nLoader.prototype.load = function (srcMap){\n\tvar This = this;\n\tthis._total = 0;\n\tthis._failed = 0;\n\tthis._received = 0;\n\tfor (var src in srcMap) {\n\t\tthis._total++;\n\t\tthis.textures[src] = new Texture(srcMap[src]);\n\t\tbind(this.textures[src]);\n\t}\n\n\tfunction bind(texture){\n\t\ttexture.on('load',function(){\n\t\t\tThis._received++;\n\t\t\tThis.emit({type: 'update'});\n\t\t\tif(This._received+This._failed>=This._total)This.emit({type: 'compelete'});\n\t\t});\n\t\ttexture.on('error',function(){\n\t\t\tThis._failed++;\n\t\t\tThis.emit({type: 'update'});\n\t\t\tif(This._received+This._failed>=This._total)This.emit({type: 'compelete'});\n\t\t});\n\t}\n\treturn this;\n};\n\n/**\n * 从纹理图片盒子里面通过id获取纹理图片\n * \n * ```js\n * var texture = loadBox.getById('id');\n * ```\n *\n * @param id {string}\n * @return {JC.Texture}\n */\nLoader.prototype.getById = function (id){\n\treturn this.textures[id];\n};\nObject.defineProperty(Texture.prototype, 'progress', {\n    get: function() {\n        return this._total===0?1:(this._received+this._failed)/this._total;\n    }\n});\n\n\n\n/**\n * 资源加载工具\n *\n * @function\n * @memberof JC\n * @param srcMap {object} key-src map\n * @return {JC.Loader}\n */\nJC.loaderUtil = function(srcMap){\n\treturn new JC.Loader().load(srcMap);\n};\n","/**\n * 动画对象的基本类型\n *\n * @class\n * @memberof JC\n * @param [opts] {object} 动画配置信息\n */\n\nfunction Animate(opts) {\n    this.element = opts.element || {};\n    this.duration = opts.duration || 300;\n    this.living = true;\n\n    this.onCompelete = opts.onCompelete || null;\n    this.onUpdate = opts.onUpdate || null;\n\n    this.infinity = opts.infinity || false;\n    this.alternate = opts.alternate || false;\n    this.ease = opts.ease || 'easeBoth';\n    this.repeats = opts.repeats || 0;\n    this.delay = opts.delay || 0;\n    this.delayCut = this.delay;\n    this.progress = 0;\n    this.direction = 1;\n\n    this.timeScale = opts.timeScale || 1;\n\n    this.paused = false;\n}\nJC.Animate = Animate;\nAnimate.prototype._swapEase = function() {\n    var ease = this.ease;\n    if (ease.indexOf('In') > 0) {\n        ease = ease.replace('In', 'Out');\n    } else if (ease.indexOf('Out') > 0) {\n        ease = ease.replace('Out', 'In');\n    }\n    this.ease = ease;\n};\nAnimate.prototype.nextPose = function() {\n    var cache = {};\n    for (var i in this.ATRE) {\n        cache[i] = JC.TWEEN[this.ease](this.progress, this.ATRS[i], this.ATRE[i] - this.ATRS[i], this.duration);\n        if (this.element[i] !== undefined) this.element[i] = cache[i];\n    }\n    return cache; //this.onUpdate\n};\nAnimate.prototype.pause = function() {\n    this.paused = true;\n};\nAnimate.prototype.start = function() {\n    this.paused = false;\n};\nAnimate.prototype.stop = function() {\n    this.progress = this.duration;\n};\nAnimate.prototype.cancle = function() {\n    this.living = false;\n};\n\n\n/**\n * Transition类型动画对象\n *\n * @class\n * @memberof JC\n * @param [opts] {object} 动画所具备的特性\n */\n\nfunction Transition(opts) {\n    JC.Animate.call(this, opts);\n\n    this.ATRS = opts.from;\n    this.ATRE = opts.to;\n\n}\nJC.Transition = Transition;\nTransition.prototype = Object.create(JC.Animate.prototype);\nTransition.prototype.constructor = JC.Transition;\nTransition.prototype.update = function(snippet) {\n    if (this.paused || !this.living || this.delayCut>0){\n        if (this.delayCut>0) this.delayCut -= Math.abs(snippet);\n        return;\n    }\n\n    var progress = this.progress += this.direction * this.timeScale * snippet;\n    this.progress = JC.clamp(progress,0,this.duration);\n\n    var pose = this.nextPose();\n    \n    if (this.onUpdate) this.onUpdate(pose, this.progress / this.duration);\n\n    if ((this.direction === -1 && progress <= 0) || (this.direction === 1 && progress >= this.duration)) {\n        if (this.repeats > 0 || this.infinity) {\n            if (this.repeats > 0) --this.repeats;\n            this.delayCut = this.delay;\n            if (this.alternate) {\n                this.direction *= -1;\n                this._swapEase();\n            } else {\n                this.progress = 0;\n            }\n        } else {\n            this.living = false;\n            if(this.onCompelete) this.onCompelete(pose);\n        }\n    }\n};\n\n\n/**\n * Animation类型动画对象\n *\n * @class\n * @memberof JC\n * @param [opts] {object} 动画配置信息\n */\nfunction Animation(opts) {\n    JC.Animate.call(this, opts);\n\n    this._keyframes = opts.keys;\n    this._keyIndex = 0;\n    this._direction = 1;\n    this._keyConfig = opts.keyConfig;\n\n    this.configKey();\n}\nJC.Animation = Animation;\nAnimation.prototype = Object.create(JC.Animate.prototype);\nAnimation.prototype.constructor = JC.Animation;\nAnimation.prototype.configKey = function() {\n    this.ATRS = this._keyframes[this._keyIndex];\n    this._keyIndex += this._direction;\n    this.ATRE = this._keyframes[this._keyIndex];\n    var config = this._keyConfig[Math.min(this._keyIndex, this._keyIndex - this._direction)] || {};\n    this.ease = config.ease || this.ease;\n    this.duration = config.duration || this.duration;\n    this.progress = 0;\n};\nAnimation.prototype.update = function(snippet) {\n    if (this.paused || !this.living) return;\n    this.progress += this.timeScale * snippet;\n\n    if (this.progress < this.duration) {\n        if (this.progress < 0) return;\n        var pose = this.nextPose();\n        if (this.onUpdate) this.onUpdate(pose, this.progress / this.duration, this._keyIndex);\n    } else {\n        this.element.setVal(this.ATRE);\n        if (this.onUpdate) this.onUpdate(this.ATRE, 1, this._keyIndex);\n        if (this._keyIndex < this._keyframes.length - 1 && this._keyIndex > 0) {\n            this.configKey();\n        } else {\n            if (this.repeats > 0 || this.infinity) {\n                if (this.repeats > 0) --this.repeats;\n                if (this.alternate) {\n                    this._direction *= -1;\n                } else {\n                    this._keyIndex = 0;\n                }\n                this.configKey();\n            } else {\n                this.living = false;\n                if (this.onCompelete) this.onCompelete();\n            }\n        }\n    }\n};\n\n\n/**\n * PathMotion类型动画对象\n *\n * @class\n * @memberof JC\n * @param [opts] {object} 动画所具备的特性\n */\n\nfunction PathMotion(opts) {\n    JC.Animate.call(this, opts);\n\n    this.points = opts.points;\n    this.attachNormal = opts.attachNormal || false;\n    this._cacheRotate = this.element.rotation;\n    var radian = this._cacheRotate * JC.DTR;\n    this._cacheVector = { x: 10 * Math.cos(radian), y: 10 * Math.sin(radian) };\n}\nJC.PathMotion = PathMotion;\nPathMotion.prototype = Object.create(JC.Animate.prototype);\nPathMotion.prototype.constructor = JC.PathMotion;\nPathMotion.prototype.update = function(snippet) {\n    if (this.paused || !this.living || this.delayCut>0){\n        if (this.delayCut>0) this.delayCut -= Math.abs(snippet);\n        return;\n    }\n\n    this.progress += this.direction * this.timeScale * snippet;\n\n    var pose = this.nextPose();\n    if (this.onUpdate) this.onUpdate(pose, this.progress / this.duration);\n\n    if ((this.direction === -1 && this.progress <= 0) || (this.direction === 1 && this.progress >= this.duration)) {\n        if (this.repeats > 0 || this.infinity) {\n            if (this.repeats > 0) --this.repeats;\n            this.delayCut = this.delay;\n            if (this.alternate) {\n                this.direction *= -1;\n                this._swapEase();\n            } else {\n                this.progress = 0;\n            }\n        } else {\n            this.living = false;\n            if (this.onCompelete) this.onCompelete();\n        }\n    }\n};\nPathMotion.prototype.nextPose = function() {\n    var cache = {},\n        _rotate = 0,\n        t = JC.TWEEN[this.ease](this.progress, 0, 1, this.duration),\n        pos = this.getPoint(t, this.points);\n\n    cache.x = pos.x;\n    cache.y = pos.y;\n    if (this.attachNormal) {\n        _rotate = this.decomposeRotate(t, pos);\n        cache.rotation = _rotate === false ? this.preDegree : _rotate;\n        cache.rotation += this._cacheRotate;\n        if (_rotate !== false) this.preDegree = _rotate;\n    }\n    this.element.setVal(cache);\n    return cache;\n};\nPathMotion.prototype.getPoint = function(t, points) {\n    var a = points,\n        len = a.length,\n        rT = 1 - t,\n        l = a.slice(0, len - 1),\n        r = a.slice(1),\n        oP = {};\n    if (len > 3) {\n        var oL = this.getPoint(t, l),\n            oR = this.getPoint(t, r);\n        oP.x = rT * oL.x + t * oR.x;\n        oP.y = rT * oL.y + t * oR.y;\n        return oP;\n    } else {\n        oP.x = rT * rT * points[0].x + 2 * t * rT * points[1].x + t * t * points[2].x;\n        oP.y = rT * rT * points[0].y + 2 * t * rT * points[1].y + t * t * points[2].y;\n        return oP;\n    }\n};\nPathMotion.prototype.decomposeRotate = function(t, pos) {\n    var p1 = pos || this.getPoint(t, this.points);\n    var p2 = this.getPoint(t + 0.01, this.points);\n    var vector = { x: p2.x - p1.x, y: p2.y - p1.y };\n\n    var nor = this._cacheVector.x * vector.y - vector.x * this._cacheVector.y;\n    var pi = nor > 0 ? 1 : -1;\n    var cos = (vector.x * this._cacheVector.x + vector.y * this._cacheVector.y) / (Math.sqrt(vector.x * vector.x + vector.y * vector.y) * Math.sqrt(this._cacheVector.x * this._cacheVector.x + this._cacheVector.y * this._cacheVector.y));\n    if (isNaN(cos)) return false;\n    return pi * Math.acos(cos) * JC.RTD;\n};\n\n\n\n\n\n/**\n * Animator类型动画对象\n *\n * @class\n * @memberof JC\n */\nfunction Animator(element) {\n    this.element = element;\n    // this.start = false;\n    this.animates = [];\n}\nJC.Animator = Animator;\nAnimator.prototype.update = function(snippet) {\n    for (var i = 0; i < this.animates.length; i++) {\n        if (!this.animates[i].living) this.animates.splice(i, 1);\n        if (this.animates[i]) this.animates[i].update(snippet);\n    }\n};\nAnimator.prototype.fromTo = function(opts, clear) {\n    this.element.setVal(opts.from);\n    opts.element = this.element;\n    return this._addMove(new JC.Transition(opts), clear);\n};\nAnimator.prototype.to = function(opts, clear) {\n    opts.from = {};\n    for (var i in opts.to) {\n        opts.from[i] = this.element[i];\n    }\n    opts.element = this.element;\n    return this._addMove(new JC.Transition(opts), clear);\n};\nAnimator.prototype.motion = function(opts, clear) {\n    opts.element = this.element;\n    return this._addMove(new JC.PathMotion(opts), clear);\n};\nAnimator.prototype.keyFrames = function(opts, clear) {\n    opts.element = this.element;\n    return this._addMove(new JC.Animation(opts), clear);\n};\nAnimator.prototype._addMove = function(animate, clear) {\n    if (clear) this.clear();\n    this.animates.push(animate);\n    return animate;\n};\nAnimator.prototype.clear = function() {\n    this.animates.length = 0;\n};\n\n\n\n\n\n/**\n * MovieClip类型动画对象\n *\n * @class\n * @memberof JC\n * @param [element] {object} 动画对象 内部传入\n * @param [opts] {object} 动画配置信息 内部传入\n */\nfunction MovieClip(element, opts) {\n    this.element = element;\n    this.living = false;\n\n    this.onCompelete = null;\n    // this.onUpdate = null;\n\n    this.infinity = false;\n    this.alternate = false;\n    this.repeats = 0;\n\n    this.animations = opts.animations || {};\n\n    this.index = 0;\n    this.direction = 1;\n    this.frames = [];\n    this.sy = opts.sy || 0;\n    this.sx = opts.sx || 0;\n    this.fillMode = 0;\n    this.fps = 16;\n\n    this.paused = false;\n\n    this.pt = 0;\n    this.nt = 0;\n}\nJC.MovieClip = MovieClip;\nMovieClip.prototype.update = function(snippet) {\n    if (this.paused || !this.living) return;\n    this.nt += snippet;\n    if (this.nt - this.pt < this.interval) return;\n    this.pt = this.nt;\n    var i = this.index + this.direction;\n    if (i < this.frames.length && i >= 0) {\n        this.index = i;\n        // Do you need this handler???\n        // this.onUpdate&&this.onUpdate(this.index);\n    } else {\n        if (this.repeats > 0 || this.infinity) {\n            if (this.repeats > 0) --this.repeats;\n            if (this.alternate) {\n                this.direction *= -1;\n                this.index += this.direction;\n            } else {\n                this.direction = 1;\n                this.index = 0;\n            }\n            // Do you need this handler???\n            // this.onUpdate&&this.onUpdate(this.index);\n        } else {\n            this.living = false;\n            this.index = this.fillMode;\n            if (this.onCompelete) this.onCompelete();\n            if (this.next) this.next();\n        }\n    }\n};\nMovieClip.prototype.getFramePos = function() {\n    var pos = {\n        x: this.sx,\n        y: this.sy\n    };\n    var cf = this.frames[this.index];\n    if (cf > 0) {\n        var row = this.element._textureW / this.element.width >> 0;\n        var lintRow = this.sx / this.element.width >> 0;\n        var lintCol = this.sy / this.element.height >> 0;\n        var mCol = lintCol + (lintRow + cf) / row >> 0;\n        var mRow = (lintRow + cf) % row;\n        pos.x = mRow * this.element.width;\n        pos.y = mCol * this.element.height;\n    }\n    return pos;\n};\nMovieClip.prototype.playMovie = function(opts) {\n    this.next = null;\n    var movie = this.format(opts.movie);\n    if (!JC.isArray(movie)) return;\n    this.frames = movie;\n    this.index = 0;\n    this.direction = 1;\n    this.fillMode = opts.fillMode || 0;\n    this.fps = opts.fps || this.fps;\n    this.infinity = opts.infinity || false;\n    this.alternate = opts.alternate || false;\n    this.repeats = opts.repeats || 0;\n    this.living = true;\n    this.onCompelete = opts.onCompelete || null;\n};\nMovieClip.prototype.format = function(movie) {\n    if (JC.isString(movie)) {\n        var config = this.animations[movie];\n        if (config) {\n            return this.format(config);\n        } else {\n            console.warn(\n                '%c JC.MovieClip warn %c: you didn\\`t config %c' + movie + '%c in animations ',\n                'color: #f98165; background: #80a89e',\n                'color: #80a89e; background: #cad9d5;',\n                'color: #f98165; background: #cad9d5',\n                'color: #80a89e; background: #cad9d5'\n            );\n            return false;\n        }\n    } else if (JC.isArray(movie)) {\n        return movie;\n    } else if (JC.isObject(movie)) {\n        var arr = [];\n        for (var i = movie.start; i <= movie.end; i++) {\n            arr.push(i);\n        }\n        if (movie.next && this.animations[movie.next]) {\n            var This = this;\n            this.next = function() {\n                This.playMovie({\n                    movie: this.animations[movie.next],\n                    infinity: true\n                });\n            };\n        }\n        return arr;\n    }\n};\nMovieClip.prototype.pause = function() {\n    this.paused = true;\n};\nMovieClip.prototype.start = function() {\n    this.paused = false;\n};\nMovieClip.prototype.cancle = function() {\n    this.living = false;\n};\nObject.defineProperty(MovieClip.prototype, 'interval', {\n    get: function() {\n        return this.fps > 0 ? 1000 / this.fps >> 0 : 16;\n    }\n});\n","\n/**\n * 矩阵对象，用来描述和记录对象的tansform 状态信息\n *\n * @class\n * @memberof JC\n */\nfunction Matrix(){\n    this.a = 1;\n    this.b = 0;\n    this.c = 0;\n    this.d = 1;\n    this.tx = 0;\n    this.ty = 0;\n}\nJC.Matrix = Matrix;\n\n/**\n * 从数组设置一个矩阵\n *\n * @param array {number[]}\n */\nMatrix.prototype.fromArray = function(array){\n    this.a = array[0];\n    this.b = array[1];\n    this.c = array[3];\n    this.d = array[4];\n    this.tx = array[2];\n    this.ty = array[5];\n};\n\n/**\n * 将对象的数据以数组的形式导出\n *\n * @param transpose {boolean} 是否对矩阵进行转置\n * @return {number[]} 返回数组\n */\nMatrix.prototype.toArray = function(transpose){\n    if(!this.array) this.array = new JC.Float32Array(9);\n    var array = this.array;\n\n    if(transpose){\n        array[0] = this.a;\n        array[1] = this.b;\n        array[2] = 0;\n        array[3] = this.c;\n        array[4] = this.d;\n        array[5] = 0;\n        array[6] = this.tx;\n        array[7] = this.ty;\n        array[8] = 1;\n    }else{\n        array[0] = this.a;\n        array[1] = this.c;\n        array[2] = this.tx;\n        array[3] = this.b;\n        array[4] = this.d;\n        array[5] = this.ty;\n        array[6] = 0;\n        array[7] = 0;\n        array[8] = 1;\n    }\n    return array;\n};\n\n/**\n * 将坐标点与矩阵左乘\n *\n * @param pos {object} 原始点\n * @param newPos {object} 变换之后的点\n * @return {object} 返回数组\n */\nMatrix.prototype.apply = function(pos, newPos){\n    newPos = newPos || {};\n    newPos.x = this.a * pos.x + this.c * pos.y + this.tx;\n    newPos.y = this.b * pos.x + this.d * pos.y + this.ty;\n    return newPos;\n};\n/**\n * 将坐标点与转置矩阵左乘\n *\n * @param pos {object} 原始点\n * @param newPos {object} 变换之后的点\n * @return {object} 变换之后的点\n */\nMatrix.prototype.applyInverse = function(pos, newPos){\n    var id = 1 / (this.a * this.d + this.c * -this.b);\n    newPos.x = this.d * id * pos.x + -this.c * id * pos.y + (this.ty * this.c - this.tx * this.d) * id;\n    newPos.y = this.a * id * pos.y + -this.b * id * pos.x + (-this.ty * this.a + this.tx * this.b) * id;\n    return newPos;\n};\n/**\n * 位移操作\n *\n * @return {this} \n */\nMatrix.prototype.translate = function(x, y){\n    this.tx += x;\n    this.ty += y;\n    return this;\n};\n/**\n * 缩放操作\n *\n * @return {this} \n */\nMatrix.prototype.scale = function(x, y){\n    this.a *= x;\n    this.d *= y;\n    this.c *= x;\n    this.b *= y;\n    this.tx *= x;\n    this.ty *= y;\n    return this;\n};\n/**\n * 旋转操作\n *\n * @return {this} \n */\nMatrix.prototype.rotate = function(angle){\n    var cos = Math.cos( angle );\n    var sin = Math.sin( angle );\n    var a1 = this.a;\n    var c1 = this.c;\n    var tx1 = this.tx;\n    this.a = a1 * cos-this.b * sin;\n    this.b = a1 * sin+this.b * cos;\n    this.c = c1 * cos-this.d * sin;\n    this.d = c1 * sin+this.d * cos;\n    this.tx = tx1 * cos - this.ty * sin;\n    this.ty = tx1 * sin + this.ty * cos;\n    return this;\n};\n/**\n * 矩阵相乘\n *\n * @return {this} \n */\nMatrix.prototype.append = function(matrix){\n    var a1 = this.a;\n    var b1 = this.b;\n    var c1 = this.c;\n    var d1 = this.d;\n    this.a  = matrix.a * a1 + matrix.b * c1;\n    this.b  = matrix.a * b1 + matrix.b * d1;\n    this.c  = matrix.c * a1 + matrix.d * c1;\n    this.d  = matrix.c * b1 + matrix.d * d1;\n    this.tx = matrix.tx * a1 + matrix.ty * c1 + this.tx;\n    this.ty = matrix.tx * b1 + matrix.ty * d1 + this.ty;\n    return this;\n};\n/**\n * 单位矩阵\n *\n * @return {this} \n */\nMatrix.prototype.identity = function(){\n    this.a = 1;\n    this.b = 0;\n    this.c = 0;\n    this.d = 1;\n    this.tx = 0;\n    this.ty = 0;\n    return this;\n};\n/**\n * 快速设置矩阵各个分量\n *\n * @return {this} \n */\nMatrix.prototype.setTransform = function (x, y, pivotX, pivotY, scaleX, scaleY, rotation, skewX, skewY)\n{\n    var a, b, c, d, sr, cr, cy, sy, nsx, cx;\n\n    sr  = Math.sin(rotation);\n    cr  = Math.cos(rotation);\n    cy  = Math.cos(skewY);\n    sy  = Math.sin(skewY);\n    nsx = -Math.sin(skewX);\n    cx  =  Math.cos(skewX);\n\n    a  =  cr * scaleX;\n    b  =  sr * scaleX;\n    c  = -sr * scaleY;\n    d  =  cr * scaleY;\n\n    this.a  = cy * a + sy * c;\n    this.b  = cy * b + sy * d;\n    this.c  = nsx * a + cx * c;\n    this.d  = nsx * b + cx * d;\n\n    this.tx = x + ( pivotX * a + pivotY * c );\n    this.ty = y + ( pivotX * b + pivotY * d );\n\n    return this;\n};\nJC.IDENTITY = new Matrix();\nJC.TEMP_MATRIX = new Matrix();\n\n\n/**\n * 显示对象的基类\n *\n * @class\n * @memberof JC\n */\nfunction DisplayObject(){\n    this._ready = true;\n\n\tthis.visible = true;\n\tthis.worldAlpha = 1;\n\tthis.alpha = 1;\n\n\tthis.scaleX = 1;\n\tthis.scaleY = 1;\n\n\tthis.skewX = 0;\n\tthis.skewY = 0;\n\n\tthis.rotation = 0;\n\tthis.rotationCache = 0;\n    this._sr = 0;\n    this._cr = 1;\n\t\n\tthis.x = 0;\n\tthis.y = 0;\n\t\n\tthis.pivotX = 0;\n\tthis.pivotY = 0;\n\n\tthis.mask = null;\n\n\tthis.parent = null;\n\tthis.worldTransform = new Matrix();\n\n    this.event = new JC.Eventer();\n    this.passEvent = false;\n    this.bound = [];\n\n\n    this.Animator = new JC.Animator(this);\n}\nJC.DisplayObject = DisplayObject;\nDisplayObject.prototype.constructor = JC.DisplayObject;\n\nObject.defineProperty(DisplayObject.prototype, 'scale', {\n    get: function() {\n        return this.scaleX;\n    },\n    set: function(scale) {\n        this.scaleX = this.scaleY = scale;\n    }\n});\n\n/**\n * fromTo动画，指定动画的启始位置和结束位置\n *\n * ```js\n * // 扩展缓动函数，缓动函数库详见目录下的util/tween.js\n * JC.TWEEN.extend({    \n *    bounceOut: function(t, b, c, d){\n *        if ((t/=d) < (1/2.75)) {\n *            return c*(7.5625*t*t) + b;\n *        } else if (t < (2/2.75)) {\n *            return c*(7.5625*(t-=(1.5/2.75))*t + 0.75) + b;\n *        } else if (t < (2.5/2.75)) {\n *            return c*(7.5625*(t-=(2.25/2.75))*t + 0.9375) + b;\n *        }\n *        return c*(7.5625*(t-=(2.625/2.75))*t + 0.984375) + b;\n *    }\n * });\n * var dispayObj = new JC.Text('Hello JC','bold 36px Arial','#c32361');\n * dispayObj.fromTo({\n *   from: {x: 100},\n *   to: {x: 200},\n *   ease: 'bounceOut', // 执行动画使用的缓动函数 默认值为 easeBoth\n *   repeats: 10, // 动画运动完后再重复10次\n *   infinity: true, // 无限循环动画\n *   alternate: true, // 偶数次的时候动画回放\n *   duration: 1000, // 动画时长 ms单位 默认 300ms\n *   onUpdate: function(state,rate){},\n *   onCompelete: function(){ console.log('end'); } // 动画执行结束回调\n * });\n * ```\n *\n * @param opts {object} 过渡动画的配置\n * @param clear {boolean} 是否去掉之前的动画\n */\nDisplayObject.prototype.fromTo = function(opts,clear){\n    return this.Animator.fromTo(opts,clear);\n};\n\n/**\n * to动画，物体当前位置为动画的启始位置，只需制定动画的结束位置\n *\n * @param opts {object} 过渡动画的配置\n * @param clear {boolean} 是否去掉之前的动画\n */\nDisplayObject.prototype.to = function(opts,clear){\n    return this.Animator.to(opts,clear);\n};\n\n/**\n * to动画，物体当前位置为动画的启始位置，只需制定动画的结束位置\n *\n * @param opts {object} 过渡动画的配置\n * @param clear {boolean} 是否去掉之前的动画\n */\nDisplayObject.prototype.motion = function(opts,clear){\n    return this.Animator.motion(opts,clear);\n};\n\n/**\n * keyFrames动画，设置物体动画的keyframe，可以为相邻的两个keyFrames之前配置差值时间及时间函数\n *\n * @param [opts] {object} 关键帧动画的配置\n * @param clear {boolean} 是否去掉该对象身上的动画\n */\nDisplayObject.prototype.keyFrames = function(opts,clear){\n    return this.Animator.keyFrames(opts);\n};\n\n/**\n * 检测是否可见\n *\n * @method isVisible\n * @private\n */\nDisplayObject.prototype.isVisible = function(){\n\treturn !!(this.visible && this.alpha>0 && this.scaleX*this.scaleY!==0);\n};\n\n/**\n * 移除遮罩\n *\n */\nDisplayObject.prototype.removeMask = function(){\n\tthis.mask = null;\n};\nDisplayObject.prototype.setVal = function(vals){\n\tif(vals===undefined)return;\n\tfor(var key in vals){\n\t\tif(this[key]===undefined){\n\t\t\tcontinue;\n\t\t}else{\n\t\t\tthis[key] = vals[key];\n\t\t}\n\t}\n};\nDisplayObject.prototype.updateMe = function(){\n    var pt = this.parent.worldTransform;\n    var wt = this.worldTransform;\n\n    var a, b, c, d, tx, ty;\n\n    if(this.skewX || this.skewY){\n\n        JC.TEMP_MATRIX.setTransform(\n            this.x,\n            this.y,\n            this.pivotX,\n            this.pivotY,\n            this.scaleX,\n            this.scaleY,\n            this.rotation*JC.DTR,\n            this.skewX*JC.DTR,\n            this.skewY*JC.DTR\n        );\n\n        wt.a  = JC.TEMP_MATRIX.a  * pt.a + JC.TEMP_MATRIX.b  * pt.c;\n        wt.b  = JC.TEMP_MATRIX.a  * pt.b + JC.TEMP_MATRIX.b  * pt.d;\n        wt.c  = JC.TEMP_MATRIX.c  * pt.a + JC.TEMP_MATRIX.d  * pt.c;\n        wt.d  = JC.TEMP_MATRIX.c  * pt.b + JC.TEMP_MATRIX.d  * pt.d;\n        wt.tx = JC.TEMP_MATRIX.tx * pt.a + JC.TEMP_MATRIX.ty * pt.c + pt.tx;\n        wt.ty = JC.TEMP_MATRIX.tx * pt.b + JC.TEMP_MATRIX.ty * pt.d + pt.ty;\n    }else{\n        if(this.rotation % 360){\n            if(this.rotation !== this.rotationCache){\n                this.rotationCache = this.rotation;\n                this._sr = Math.sin(this.rotation*JC.DTR);\n                this._cr = Math.cos(this.rotation*JC.DTR);\n            }\n\n            a  =  this._cr * this.scaleX;\n            b  =  this._sr * this.scaleX;\n            c  = -this._sr * this.scaleY;\n            d  =  this._cr * this.scaleY;\n            tx =  this.x;\n            ty =  this.y;\n\n            if(this.pivotX || this.pivotY){\n                tx -= this.pivotX * a + this.pivotY * c;\n                ty -= this.pivotX * b + this.pivotY * d;\n            }\n            wt.a  = a  * pt.a + b  * pt.c;\n            wt.b  = a  * pt.b + b  * pt.d;\n            wt.c  = c  * pt.a + d  * pt.c;\n            wt.d  = c  * pt.b + d  * pt.d;\n            wt.tx = tx * pt.a + ty * pt.c + pt.tx;\n            wt.ty = tx * pt.b + ty * pt.d + pt.ty; \n        }else{\n            a  = this.scaleX;\n            d  = this.scaleY;\n\n            tx = this.x - this.pivotX * a;\n            ty = this.y - this.pivotY * d;\n\n            wt.a  = a  * pt.a;\n            wt.b  = a  * pt.b;\n            wt.c  = d  * pt.c;\n            wt.d  = d  * pt.d;\n            wt.tx = tx * pt.a + ty * pt.c + pt.tx;\n            wt.ty = tx * pt.b + ty * pt.d + pt.ty;\n        }\n    }\n    this.worldAlpha = this.alpha * this.parent.worldAlpha;\n};\nDisplayObject.prototype.upAnimation = function(snippet){\n    this.Animator.update(snippet);\n};\nDisplayObject.prototype.setTransform = function(ctx){\n\tvar matrix = this.worldTransform;\n\tctx.globalAlpha = this.worldAlpha;\n\tctx.setTransform(matrix.a,matrix.b,matrix.c,matrix.d,matrix.tx,matrix.ty);\n};\n/**\n * 获取物体相对于canvas世界坐标系的坐标位置\n *\n * @return {object}\n */\nDisplayObject.prototype.getGlobalPos = function(){\n    return {x: this.worldTransform.tx,y: this.worldTransform.ty};\n};\n/**\n * 显示对象的事件绑定函数\n *\n * @param type {String} 事件类型\n * @param fn {Function} 回调函数\n */\nDisplayObject.prototype.on = function(type,fn){\n    this.event.on(type,fn);\n};\n/**\n * 显示对象的事件解绑函数\n *\n * @param type {String} 事件类型\n * @param fn {Function} 注册时回调函数的引用\n */\nDisplayObject.prototype.off = function(type,fn){\n    this.event.off(type,fn);\n};\n/**\n * 显示对象的一次性事件绑定函数\n *\n * @param type {String} 事件类型\n * @param fn {Function} 回调函数\n */\nDisplayObject.prototype.once = function(type,fn){\n    var This = this,\n        cb = function(ev){\n            if (fn) fn(ev);\n            This.event.off(type,cb);\n        };\n    this.event.on(type,cb);\n};\n/**\n * 获取当前坐标系下的监测区域\n *\n * @method getBound\n * @private\n */\nDisplayObject.prototype.getBound = function (){\n    var bound = [],\n        l = this.bound.length>>1;\n\n    for (var i = 0; i < l; i++) {\n        var p = this.worldTransform.apply({x: this.bound[i*2],y: this.bound[i*2+1]});\n        bound[i*2  ] = p.x;\n        bound[i*2+1] = p.y;\n    }\n    return bound;\n};\n/**\n * 设置显示对象的监测区域\n *\n * @param points {Array} 区域的坐标点 [x0,y0 ..... xn,yn]\n * @param needless {boolean} 当该值为true，当且仅当this.bound为空时才会更新点击区域。默认为false，总是更新点击区域。\n * @return {Array}\n */\nDisplayObject.prototype.setBound = function (points,needless){\n    var l = this.bound.length;\n    if(l>4&&needless)return;\n    points = points||[\n        -this.regX,this.regY,\n        -this.regX,this.regY-this.height,\n        -this.regX+this.width,this.regY-this.height,\n        -this.regX+this.width,this.regY\n    ];\n    this.bound = points;\n};\nDisplayObject.prototype.ContainsPoint = function (p,px,py){\n    var n = p.length>>1;\n    var ax, ay = p[2*n-3]-py, bx = p[2*n-2]-px, by = p[2*n-1]-py;\n    \n    //var lup = by > ay;\n    for(var i=0; i<n; i++){\n        ax = bx;  ay = by;\n        bx = p[2*i  ] - px;\n        by = p[2*i+1] - py;\n        if(ay==by) continue;\n        lup = by>ay;\n    }\n    \n    var depth = 0;\n    for(i=0; i<n; i++){\n        ax = bx;  ay = by;\n        bx = p[2*i  ] - px;\n        by = p[2*i+1] - py;\n        if(ay< 0 && by< 0) continue;\n        if(ay> 0 && by> 0) continue;\n        if(ax< 0 && bx< 0) continue;\n        \n        if(ay==by && Math.min(ax,bx)<=0) return true;\n        if(ay==by) continue;\n        \n        var lx = ax + (bx-ax)*(-ay)/(by-ay);\n        if(lx===0) return true;\n        if(lx> 0) depth++;\n        if(ay===0 &&  lup && by>ay) depth--;\n        if(ay===0 && !lup && by<ay) depth--;\n        lup = by>ay;\n    }\n    return (depth & 1) == 1;\n};\n\n\n/**\n * 显示对象容器，继承至DisplayObject\n *\n * ```js\n * var container = new JC.Container();\n * container.addChilds(sprite);\n * ```\n *\n * @class\n * @extends JC.DisplayObject\n * @memberof JC\n */\nfunction Container(){\n\tJC.DisplayObject.call( this );\n    this.cds = [];\n    this.timeScale = 1;\n    this.paused = false;\n}\nJC.Container = Container;\nContainer.prototype = Object.create( JC.DisplayObject.prototype );\nContainer.prototype.constructor = JC.Container;\n\n/**\n * 向容器添加一个物体\n * \n * ```js\n * container.addChilds(sprite,sprite2,text3,graphice);\n * ```\n *\n * @param child {JC.Container}\n * @return {JC.Container}\n */\nContainer.prototype.addChilds = function (cd){\n    if(cd === undefined)return cd;\n    var l = arguments.length;\n    if(l > 1){\n        for (var i=0; i<l; i++) { this.addChilds(arguments[i]); }\n        return arguments[l-1];\n    }\n    if(cd.parent){ cd.parent.removeChilds(cd); }\n    cd.parent = this;\n    this.cds.push(cd);\n    return cd;\n};\n/**\n * 从容器移除一个物体\n * \n * ```js\n * container.removeChilds(sprite,sprite2,text3,graphice);\n * ```\n *\n * @param child {JC.Container}\n * @return {JC.Container}\n */\nContainer.prototype.removeChilds = function (){\n    var l = arguments.length;\n    if(l > 1){\n        for (var i=0; i<l; i++) { this.removeChilds(arguments[i]); }\n    }else if(l===1){\n        for(var a=0;a<this.cds.length;a++){\n            if(this.cds[a]===arguments[0]){\n                this.cds.splice(a,1);\n                this.cds[a].parent = null;\n                a--;\n            }\n        }\n    }\n};\nContainer.prototype.updateTransform = function (snippet){\n    if (!this._ready) return;\n    snippet = this.timeScale*snippet;\n\tif (!this.paused) this.upAnimation(snippet);\n\tthis.updateMe();\n\tif (this.cds.length>0) this.updateChilds(snippet);\n};\nContainer.prototype.updateChilds = function (snippet){\n    for (var i=0,l=this.cds.length; i<l; i++) {\n        var cd = this.cds[i];\n        cd.updateTransform(snippet);\n    }\n};\nContainer.prototype.render = function (ctx){\n\tctx.save();\n\tthis.setTransform(ctx);\n\tif (this.mask) this.mask.render(ctx);\n\tthis.renderMe(ctx);\n\tif (this.cds.length>0) this.renderChilds(ctx);\n\tctx.restore();\n};\nContainer.prototype.renderMe = function (){\n    return true;\n};\nContainer.prototype.renderChilds = function (ctx){\n    for (var i=0,l=this.cds.length; i<l; i++) {\n        var cd = this.cds[i];\n        if (!cd.isVisible()||!cd._ready)continue;\n        cd.render(ctx);\n    }\n};\nContainer.prototype.noticeEvent = function (ev){\n    var i = this.cds.length-1;\n    while(i>=0){\n        var child = this.cds[i];\n        if(child.visible){\n            child.noticeEvent(ev);\n            if(ev.target)break;\n        }\n        i--;\n    }\n    this.upEvent(ev);\n};\nContainer.prototype.upEvent = function(ev){\n    if(!this._ready)return;\n    if(ev.target||(!this.passEvent&&this.hitTest(ev))){\n        if(!ev.cancleBubble||ev.target===this){\n            if(!(this.event.listeners[ev.type]&&this.event.listeners[ev.type].length>0))return;\n            this.event.emit(ev);\n        }\n    }\n};\nContainer.prototype.hitTest = function(ev){\n    if (ev.type==='touchmove'||ev.type==='touchend'||ev.type==='mousemove'||ev.type==='mouseup'){\n        var re = this.event.touchstarted;\n        if(re)ev.target = this;\n        if(ev.type==='touchend'||ev.type==='mouseup')this.event.touchstarted = false;\n        return re;\n    }\n    if(this.hitTestMe(ev)){\n        ev.target = this;\n        if(ev.type==='touchstart'||ev.type==='mousedown')this.event.touchstarted = true;\n        return true;\n    }\n    return false;\n};\nContainer.prototype.hitTestMe = function(ev){\n    return this.ContainsPoint(this.getBound(),ev.global.x,ev.global.y);\n};\nContainer.prototype.pause = function(){\n    this.paused = true;\n};\nContainer.prototype.start = function(){\n    this.paused = false;\n};\nContainer.prototype.cancle = function(){\n    this.Animator.clear();\n};\n\n\n/**\n * 位图精灵图，继承至Container\n *\n * ```js\n * var loadBox = JC.loaderUtil({\n *    frames: './images/frames.png'\n * });\n * var sprite = new JC.Sprite({\n *      texture: loadBox.getById('frames'),\n *      width: 165,\n *      height: 292,\n *      count: 38,\n *      sx: 0,\n *      sy: 0,\n *      animations: {\n *          fall: {start: 0,end: 4,next: 'stand'},\n *          fly: {start: 5,end: 9,next: 'stand'},\n *          stand: {start: 10,end: 39},\n *          walk: {start: 40,end: 59,next: 'stand'}\n *      }\n * });\n * ```\n *\n * @class\n * @extends JC.Container\n * @memberof JC\n */\nfunction Sprite(opts){\n\tJC.Container.call( this );\n\n    this.texture = opts.texture;\n    if(this.texture.loaded){\n        this.upTexture(opts);\n    }else{\n        var This = this;\n        this._ready = false;\n        this.texture.on('load',function(){\n            This.upTexture(opts);\n            This._ready = true;\n        });\n    }\n\n    this.MovieClip = new JC.MovieClip(this,opts);\n    \n}\nJC.Sprite = Sprite;\nSprite.prototype = Object.create( JC.Container.prototype );\nSprite.prototype.constructor = JC.Sprite;\nSprite.prototype.upTexture = function(opts){\n    this._textureW = opts.texture.width;\n    this._textureH = opts.texture.height;\n    this.width = opts.width||this._textureW;\n    this.height = opts.height||this._textureH;\n    this.regX = this.width>>1;\n    this.regY = this.height>>1;\n    this.setBound(null,true);\n};\nSprite.prototype.upAnimation = function(snippet){\n    this.Animator.update(snippet);\n    this.MovieClip.update(snippet);\n};\n/**\n * 播放逐祯动画\n *\n *```js\n * var sprite = new JC.Sprite({\n *      texture: loadBox.getById('dragon'),\n *      width: 210,\n *      height: 231,\n *      animations: {\n *          fall: {start: 0,end: 4,next: 'stand'},\n *          fly: {start: 5,end: 9,next: 'stand'},\n *          stand: {start: 10,end: 39},\n *          walk: {start: 40,end: 59,next: 'stand'}\n *      }\n * })\n * sprite.playMovie({\n *      movie: 'walk',\n *      fps: 60, // 逐帧帧率 默认20\n *      repeats: 1,\n *      infinity: true,\n *      alternate: true,\n *      fillMode: 2,  // 逐帧结束后元素停留在哪一帧，帧序号为从0开始的索引\n *      onCompelete: function(){console.log('over');}\n * });\n * ```\n *\n * @param opts {object}\n */\nSprite.prototype.playMovie = function(opts){\n    this.MovieClip.playMovie(opts);\n};\n// Sprite.prototype.getFramePos = function(){\n//     var obj = {\n//             x: this.sW,\n//             y: this.sH\n//         };\n//     if(this._cF>0){\n//         var row = this._textureW/this.width >> 0;\n//         var lintRow = this.sW/this.width >> 0;\n//         var lintCol = this.sH/this.height >> 0;\n//         var mCol = lintCol+(lintRow+this._cF)/row >> 0;\n//         var mRow = (lintRow+this._cF)%row;\n//         obj.x = mRow*this.width;\n//         obj.y = mCol*this.height;\n//     }\n//     return obj;\n// };\nSprite.prototype.renderMe = function (ctx){\n    if (!this._ready) return;\n    var pos = this.MovieClip.getFramePos();\n    ctx.drawImage(this.texture.texture, pos.x, pos.y, this.width, this.height, -this.regX, -this.regY, this.width, this.height);\n    // this.upFS();\n};\n// Sprite.prototype.upFS = function (){\n//     if(!this.canFrames)return;\n//     var time = Date.now(),\n//         ok = time-this.preTime>this.interval;\n//     if(ok){\n//         this._cF++;\n//         this.preTime = time;\n//     }\n//     if(this._cF>=this.count){\n//         this._cF = 0;\n//         if(this.repeats<=0&&!this.loop){\n//             this.canFrames = false;\n//             this._cF = this.fillMode;\n//             this.onCompelete&&this.onCompelete();\n//         }\n//         if(!this.loop)this.repeats--;\n//     }\n// };\n// Object.defineProperty(Sprite.prototype, 'interval', {\n//     get: function() {\n//         return this.fps>0?1000/this.fps>>0:20;\n//     }\n// });\n// Sprite.prototype.goFrames = function (opts){\n//     if(this.count<=1)return;\n//     opts = opts||{};\n//     this.canFrames = true;\n//     this.infinity = opts.infinity||false;\n//     this.alternate = opts.alternate||false;\n//     this.repeats = opts.repeats||0;\n//     this.onCompelete = opts.onCompelete||null;\n//     this.fillMode = opts.fillMode||0;\n//     this.fps = opts.fps||this.fps;\n//     this.preTime = Date.now();\n//     this._cF = 0;\n// };\n\n/*  TODO: drawTriangles a mesh frame \n *  can have perspective effect\n *\n *\n */\nfunction Strip(){}\n\n\n\n/**\n * 形状对象，继承至Container\n * \n * \n * ```js\n * var graphics = new JC.Graphics();\n * ```\n *\n * @class\n * @extends JC.Container\n * @memberof JC\n */\nfunction Graphics(){\n\tJC.Container.call( this );\n\tthis.cacheCanvas = null;\n}\nJC.Graphics = Graphics;\nGraphics.prototype = Object.create( JC.Container.prototype );\nGraphics.prototype.constructor = JC.Graphics;\nGraphics.prototype.renderMe = function (ctx){\n    if(!this.draw)return;\n\tif(this.cached||this.cache){\n\t\tif(this.cache){\n\t\t\tthis.cacheCanvas = this.cacheCanvas||document.createElement('canvas');\n\t\t\tthis.width = this.cacheCanvas.width = this.session.width;\n\t\t\tthis.height = this.cacheCanvas.height = this.session.height;\n\t\t\tthis._ctx = this.cacheCanvas.getContext(\"2d\");\n            this._ctx.clearRect(0,0,this.width,this.height);\n            this._ctx.save();\n            this._ctx.setTransform(1,0,0,1,this.session.center.x,this.session.center.y);\n        \tthis._drawBack(this._ctx);\n            this._ctx.restore();\n        \tthis.cached = true;\n        \tthis.cache = false;\n\t\t}\n\t\tthis.cacheCanvas&&ctx.drawImage(this.cacheCanvas, 0, 0, this.width, this.height, -this.session.center.x, -this.session.center.x, this.width, this.height);\n\t}else{\n        this._drawBack(ctx);\n\t}\n};\nGraphics.prototype._drawBack = function (ctx){\n    if(typeof this.draw === 'function'){\n        this.draw(ctx);\n    }else if(typeof this.draw === 'object' && typeof this.draw.render === 'function'){\n        this.draw.render(ctx);\n    }\n};\n/**\n * 图形绘制挂载函数\n *\n *```js\n *  var cacheMap = new JC.Graphics();  // 创建形状绘制对象\n *\n *  cacheMap.drawCall(function(ctx){\n *      for(var i = 50;i>0;i--){\n *          ctx.strokeStyle = COLOURS[i%COLOURS.length];\n *          ctx.beginPath();\n *          ctx.arc( 0, 0, i, 0, Math.PI*2 );\n *          ctx.stroke();\n *      }\n *  },{\n *      cache: true,\n *      session: {center: {x: 50,y: 50},width:100,height:100}\n *  });\n * ```\n *\n * @param fn {function}\n * @param opts {object}\n */\nGraphics.prototype.drawCall = function(fn,opts){\n\tif(fn===undefined)return;\n    opts = opts||{};\n\tthis.cache = opts.cache||false;\n\tthis.cached = false;\n\tthis.session = opts.session||{center: {x: 0,y: 0},width:100,height:100};\n\tthis.draw = fn||null;\n};\n\n\n\n/**\n * 文本，继承至Container\n * \n * \n * ```js\n * var text = new JC.Text('JC jcc2d canvas renderer','bold 36px Arial','#f00');\n * ```\n *\n * @class\n * @extends JC.Container\n * @memberof JC\n */\nfunction Text(text,font,color){\n\tJC.Container.call( this );\n\tthis.text = text.toString();\n\tthis.font = font || 'bold 12px Arial';\n\tthis.color = color || '#000000';\n\n    this.textAlign = \"center\"; // start left center end right\n    this.textBaseline = \"middle\"; // top bottom middle alphabetic hanging\n\n\n    this.outline = 0;\n    this.lineWidth = 1;\n\n    this.US = false; // use stroke\n    this.UF = true; // use fill\n\n    // ctx.measureText(str) 返回指定文本的宽度\n}\nJC.Text = Text;\nText.prototype = Object.create( JC.Container.prototype );\nText.prototype.constructor = JC.Text;\nText.prototype.renderMe = function(ctx){\n    ctx.font = this.font;\n    ctx.textAlign = this.textAlign;\n    ctx.textBaseline = this.textBaseline;\n    if(this.UF){\n        ctx.fillStyle = this.color;\n        ctx.fillText(this.text,0,0);\n    }\n    if(this.US){\n        ctx.lineWidth = this.lineWidth;\n        ctx.strokeStyle = this.color;\n        ctx.strokeText(this.text,0,0);\n    }\n};\n\n\n\n/**\n * 舞台对象，继承至Container\n * \n * \n * ```js\n * var stage = new JC.Stage('demo_canvas','#fff');\n * ```\n *\n * @class\n * @extends JC.Container\n * @memberof JC\n */\nfunction Stage(id,bgColor){\n\tJC.Container.call( this );\n    this.type = 'stage';\n    this.canvas = document.getElementById(id);\n    this.ctx = this.canvas.getContext('2d');\n    this.cds = [];\n    this.canvas.style.backgroundColor = bgColor || \"transparent\";\n    this.autoClear = true;\n    this.setStyle = false;\n    this.width = this.canvas.width;\n    this.height = this.canvas.height;\n\n    if(\"imageSmoothingEnabled\" in this.ctx)\n        this.ctx.imageSmoothingEnabled = true;\n    else if(\"webkitImageSmoothingEnabled\" in this.ctx)\n        this.ctx.webkitImageSmoothingEnabled = true;\n    else if(\"mozImageSmoothingEnabled\" in this.ctx)\n        this.ctx.mozImageSmoothingEnabled = true;\n    else if(\"oImageSmoothingEnabled\" in this.ctx)\n        this.ctx.oImageSmoothingEnabled = true;\n\n    this.initEvent();\n\n    this.pt = null;\n\n}\nJC.Stage = Stage;\nStage.prototype = Object.create( JC.Container.prototype );\nStage.prototype.constructor = JC.Stage;\n/**\n * 舞台尺寸设置\n *\n *\n * @param w {number} 可以是屏幕的宽度\n * @param h {number} 可以是屏幕的高度\n */\nStage.prototype.resize = function (w,h,sw,sh){\n    this.width = this.canvas.width = w;\n    this.height = this.canvas.height = h;\n    if(this.setStyle&&sw&&sh){\n        this.canvas.style.width = sw+'px';\n        this.canvas.style.height = sh+'px';\n    }\n};\nStage.prototype.render = function (){\n    if(this.pt===null||Date.now()-this.pt>200)this.pt = Date.now();\n    var snippet = Date.now()-this.pt;\n    snippet = snippet <= 0 ? 10: snippet;\n    this.pt += snippet;\n    this.updateChilds(this.timeScale*snippet);\n\n    this.ctx.setTransform(1,0,0,1,0,0);\n    if(this.autoClear)this.ctx.clearRect(0,0,this.width,this.height);\n    this.renderChilds(this.ctx);\n};\nStage.prototype.initEvent = function (){\n    var This = this;\n    this.canvas.addEventListener('click',function(ev){\n        This.eventProxy(ev);\n    },false);\n    this.canvas.addEventListener('touchstart',function(ev){\n        // ev.preventDefault();\n        This.eventProxy(ev);\n    },false);\n    this.canvas.addEventListener('touchmove',function(ev){\n        ev.preventDefault();\n        This.eventProxy(ev);\n    },false);\n    this.canvas.addEventListener('touchend',function(ev){\n        // ev.preventDefault();\n        This.eventProxy(ev);\n    },false);\n    this.canvas.addEventListener('mousedown',function(ev){\n        // ev.preventDefault();\n        This.eventProxy(ev);\n    },false);\n    this.canvas.addEventListener('mousemove',function(ev){\n        ev.preventDefault();\n        This.eventProxy(ev);\n    },false);\n    this.canvas.addEventListener('mouseup',function(ev){\n        // ev.preventDefault();\n        This.eventProxy(ev);\n    },false);\n};\nStage.prototype.eventProxy = function (ev){\n    var evd = this.fixCoord(ev);\n    var i = this.cds.length-1;\n    while(i>=0){\n        var child = this.cds[i];\n        if(child.visible){\n            child.noticeEvent(evd);\n            if(evd.target)break;\n        }\n        i--;\n    }\n};\nStage.prototype.fixCoord = function (ev){\n    var evd = new JC.InteractionData(),\n        offset = this.getPos(this.canvas);\n    evd.originalEvent = ev;\n    evd.type = ev.type;\n\n    evd.ratio = this.width/this.canvas.offsetWidth;\n    if(ev.touches){\n        evd.touches = [];\n        if(ev.touches.length>0){\n            for(var i=0;i<ev.touches.length;i++){\n                evd.touches[i] = {};\n                evd.touches[i].global = {};\n                evd.touches[i].global.x = (ev.touches[i].pageX-offset.x)*evd.ratio;\n                evd.touches[i].global.y = (ev.touches[i].pageY-offset.y)*evd.ratio;\n            }\n            evd.global = evd.touches[0].global;\n        }\n    }else{\n        evd.global.x = (ev.pageX-offset.x)*evd.ratio;\n        evd.global.y = (ev.pageY-offset.y)*evd.ratio;\n    }\n    return evd;\n};\nStage.prototype.getPos = function (obj){\n    var pos={};\n    if(obj.offsetParent){\n        var p = this.getPos(obj.offsetParent);\n        pos.x = obj.offsetLeft+p.x;\n        pos.y = obj.offsetTop+p.y;\n    }else{\n        pos.x = obj.offsetLeft;\n        pos.y = obj.offsetTop;\n    }\n    return pos;\n};\n\n","(function() {\n    var lastTime = 0;\n    var vendors = ['ms', 'moz', 'webkit', 'o'];\n    for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n        window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\n        window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] ||\n            window[vendors[x] + 'CancelRequestAnimationFrame'];\n    }\n\n    if (!window.requestAnimationFrame) {\n        window.requestAnimationFrame = function(callback) {\n            var currTime = new Date().getTime();\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n            var id = window.setTimeout(function() { callback(currTime + timeToCall); },\n              timeToCall);\n            lastTime = currTime + timeToCall;\n            return id;\n        };\n    }\n\n    if (!window.cancelAnimationFrame) {\n        window.cancelAnimationFrame = function(id) {\n            clearTimeout(id);\n        };\n    }\n\n    window.RAF = window.requestAnimFrame = window.requestAnimationFrame;\n    window.CAF = window.cancelAnimationFrame;\n})();","JC.TWEEN = {\n\teaseBoth: function(t, b, c, d){  //加速减速曲线\n\t\tif ((t/=d/2) < 1) {\n\t\t\treturn c/2*t*t + b;\n\t\t}\n\t\treturn -c/2 * ((--t)*(t-2) - 1) + b;\n\t},\n\textend: function(opts){\n\t\tif(!opts)return;\n\t\tfor(var key in opts){\n\t\t\tif(key!=='extend'&&opts[key])this[key]=opts[key];\n\t\t}\n\t}\n};"]}